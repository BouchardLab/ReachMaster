Index: docs/build/html/_modules/Tkinter.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docs/build/html/_modules/Tkinter.html	(revision 78c305a9bc1a874c86424646d6a9b53c5ab14f5c)
+++ docs/build/html/_modules/Tkinter.html	(date 1586289706381)
@@ -8,7 +8,7 @@
   
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   
-  <title>Tkinter &mdash; ReachMaster alpha documentation</title>
+  <title>tkinter &mdash; ReachMaster alpha documentation</title>
   
 
   
@@ -21,10 +21,10 @@
   
     
       <script type="text/javascript" id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
-        <script type="text/javascript" src="../_static/jquery.js"></script>
-        <script type="text/javascript" src="../_static/underscore.js"></script>
-        <script type="text/javascript" src="../_static/doctools.js"></script>
-        <script type="text/javascript" src="../_static/language_data.js"></script>
+        <script src="../_static/jquery.js"></script>
+        <script src="../_static/underscore.js"></script>
+        <script src="../_static/doctools.js"></script>
+        <script src="../_static/language_data.js"></script>
     
     <script type="text/javascript" src="../_static/js/theme.js"></script>
 
@@ -137,7 +137,7 @@
         
           <li><a href="index.html">Module code</a> &raquo;</li>
         
-      <li>Tkinter</li>
+      <li>tkinter</li>
     
     
       <li class="wy-breadcrumbs-aside">
@@ -152,7 +152,7 @@
           <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
            <div itemprop="articleBody">
             
-  <h1>Source code for Tkinter</h1><div class="highlight"><pre>
+  <h1>Source code for tkinter</h1><div class="highlight"><pre>
 <span></span><span class="sd">&quot;&quot;&quot;Wrapper functions for Tcl/Tk.</span>
 
 <span class="sd">Tkinter provides classes which allow the display, positioning and</span>
@@ -173,34 +173,27 @@
 <span class="sd">command) or with the method bind.</span>
 
 <span class="sd">Example (Hello, World):</span>
-<span class="sd">import Tkinter</span>
-<span class="sd">from Tkconstants import *</span>
-<span class="sd">tk = Tkinter.Tk()</span>
-<span class="sd">frame = Tkinter.Frame(tk, relief=RIDGE, borderwidth=2)</span>
+<span class="sd">import tkinter</span>
+<span class="sd">from tkinter.constants import *</span>
+<span class="sd">tk = tkinter.Tk()</span>
+<span class="sd">frame = tkinter.Frame(tk, relief=RIDGE, borderwidth=2)</span>
 <span class="sd">frame.pack(fill=BOTH,expand=1)</span>
-<span class="sd">label = Tkinter.Label(frame, text=&quot;Hello, World&quot;)</span>
+<span class="sd">label = tkinter.Label(frame, text=&quot;Hello, World&quot;)</span>
 <span class="sd">label.pack(fill=X, expand=1)</span>
-<span class="sd">button = Tkinter.Button(frame,text=&quot;Exit&quot;,command=tk.destroy)</span>
+<span class="sd">button = tkinter.Button(frame,text=&quot;Exit&quot;,command=tk.destroy)</span>
 <span class="sd">button.pack(side=BOTTOM)</span>
 <span class="sd">tk.mainloop()</span>
 <span class="sd">&quot;&quot;&quot;</span>
 
-<span class="n">__version__</span> <span class="o">=</span> <span class="s2">&quot;$Revision: 81008 $&quot;</span>
-
+<span class="kn">import</span> <span class="nn">enum</span>
 <span class="kn">import</span> <span class="nn">sys</span>
-<span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">platform</span> <span class="o">==</span> <span class="s2">&quot;win32&quot;</span><span class="p">:</span>
-    <span class="c1"># Attempt to configure Tcl/Tk without requiring PATH</span>
-    <span class="kn">import</span> <span class="nn">FixTk</span>
-<span class="k">try</span><span class="p">:</span>
-    <span class="kn">import</span> <span class="nn">_tkinter</span>
-<span class="k">except</span> <span class="ne">ImportError</span><span class="p">,</span> <span class="n">msg</span><span class="p">:</span>
-    <span class="k">raise</span> <span class="ne">ImportError</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;, please install the python-tk package&#39;</span>
-<span class="n">tkinter</span> <span class="o">=</span> <span class="n">_tkinter</span> <span class="c1"># b/w compat for export</span>
+
+<span class="kn">import</span> <span class="nn">_tkinter</span> <span class="c1"># If this fails your Python may not be configured for Tk</span>
 <span class="n">TclError</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">TclError</span>
-<span class="kn">from</span> <span class="nn">types</span> <span class="kn">import</span> <span class="o">*</span>
-<span class="kn">from</span> <span class="nn">Tkconstants</span> <span class="kn">import</span> <span class="o">*</span>
+<span class="kn">from</span> <span class="nn">tkinter.constants</span> <span class="kn">import</span> <span class="o">*</span>
 <span class="kn">import</span> <span class="nn">re</span>
 
+
 <span class="n">wantobjects</span> <span class="o">=</span> <span class="mi">1</span>
 
 <span class="n">TkVersion</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">)</span>
@@ -210,15 +203,9 @@
 <span class="n">WRITABLE</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">WRITABLE</span>
 <span class="n">EXCEPTION</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">EXCEPTION</span>
 
-<span class="c1"># These are not always defined, e.g. not on Win32 with Tk 8.0 :-(</span>
-<span class="k">try</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">createfilehandler</span>
-<span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">createfilehandler</span> <span class="o">=</span> <span class="kc">None</span>
-<span class="k">try</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">deletefilehandler</span>
-<span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">deletefilehandler</span> <span class="o">=</span> <span class="kc">None</span>
-
 
 <span class="n">_magic_re</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;([</span><span class="se">\\</span><span class="si">{}</span><span class="s1">])&#39;</span><span class="p">)</span>
-<span class="n">_space_re</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;([\s])&#39;</span><span class="p">)</span>
+<span class="n">_space_re</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;([\s])&#39;</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">ASCII</span><span class="p">)</span>
 
 <span class="k">def</span> <span class="nf">_join</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
@@ -234,10 +221,7 @@
         <span class="k">else</span><span class="p">:</span>
             <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;{</span><span class="si">%s</span><span class="s1">}&#39;</span> <span class="o">%</span> <span class="n">_join</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
     <span class="k">else</span><span class="p">:</span>
-        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
-            <span class="n">value</span> <span class="o">=</span> <span class="n">unicode</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
-        <span class="k">elif</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">unicode</span><span class="p">):</span>
-            <span class="n">value</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+        <span class="n">value</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">value</span><span class="p">:</span>
             <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span>
         <span class="k">elif</span> <span class="n">_magic_re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
@@ -251,11 +235,11 @@
             <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;{</span><span class="si">%s</span><span class="s1">}&#39;</span> <span class="o">%</span> <span class="n">value</span>
     <span class="k">return</span> <span class="n">value</span>
 
-<span class="k">def</span> <span class="nf">_flatten</span><span class="p">(</span><span class="nb">tuple</span><span class="p">):</span>
+<span class="k">def</span> <span class="nf">_flatten</span><span class="p">(</span><span class="n">seq</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
     <span class="n">res</span> <span class="o">=</span> <span class="p">()</span>
-    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="nb">tuple</span><span class="p">:</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="ow">in</span> <span class="p">(</span><span class="n">TupleType</span><span class="p">,</span> <span class="n">ListType</span><span class="p">):</span>
+    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">seq</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="p">(</span><span class="nb">tuple</span><span class="p">,</span> <span class="nb">list</span><span class="p">)):</span>
             <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
         <span class="k">elif</span> <span class="n">item</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
             <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="p">(</span><span class="n">item</span><span class="p">,)</span>
@@ -266,17 +250,17 @@
 
 <span class="k">def</span> <span class="nf">_cnfmerge</span><span class="p">(</span><span class="n">cnfs</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-    <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnfs</span><span class="p">)</span> <span class="ow">is</span> <span class="n">DictionaryType</span><span class="p">:</span>
+    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnfs</span><span class="p">,</span> <span class="nb">dict</span><span class="p">):</span>
         <span class="k">return</span> <span class="n">cnfs</span>
-    <span class="k">elif</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnfs</span><span class="p">)</span> <span class="ow">in</span> <span class="p">(</span><span class="n">NoneType</span><span class="p">,</span> <span class="n">StringType</span><span class="p">):</span>
+    <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnfs</span><span class="p">,</span> <span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="kc">None</span><span class="p">),</span> <span class="nb">str</span><span class="p">)):</span>
         <span class="k">return</span> <span class="n">cnfs</span>
     <span class="k">else</span><span class="p">:</span>
         <span class="n">cnf</span> <span class="o">=</span> <span class="p">{}</span>
         <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">cnfs</span><span class="p">):</span>
             <span class="k">try</span><span class="p">:</span>
                 <span class="n">cnf</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
-            <span class="k">except</span> <span class="p">(</span><span class="ne">AttributeError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">),</span> <span class="n">msg</span><span class="p">:</span>
-                <span class="nb">print</span> <span class="s2">&quot;_cnfmerge: fallback due to:&quot;</span><span class="p">,</span> <span class="n">msg</span>
+            <span class="k">except</span> <span class="p">(</span><span class="ne">AttributeError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">)</span> <span class="k">as</span> <span class="n">msg</span><span class="p">:</span>
+                <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;_cnfmerge: fallback due to:&quot;</span><span class="p">,</span> <span class="n">msg</span><span class="p">)</span>
                 <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">c</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
                     <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
         <span class="k">return</span> <span class="n">cnf</span>
@@ -307,6 +291,50 @@
         <span class="nb">dict</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
     <span class="k">return</span> <span class="nb">dict</span>
 
+
+<span class="k">class</span> <span class="nc">EventType</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">enum</span><span class="o">.</span><span class="n">Enum</span><span class="p">):</span>
+    <span class="n">KeyPress</span> <span class="o">=</span> <span class="s1">&#39;2&#39;</span>
+    <span class="n">Key</span> <span class="o">=</span> <span class="n">KeyPress</span><span class="p">,</span>
+    <span class="n">KeyRelease</span> <span class="o">=</span> <span class="s1">&#39;3&#39;</span>
+    <span class="n">ButtonPress</span> <span class="o">=</span> <span class="s1">&#39;4&#39;</span>
+    <span class="n">Button</span> <span class="o">=</span> <span class="n">ButtonPress</span><span class="p">,</span>
+    <span class="n">ButtonRelease</span> <span class="o">=</span> <span class="s1">&#39;5&#39;</span>
+    <span class="n">Motion</span> <span class="o">=</span> <span class="s1">&#39;6&#39;</span>
+    <span class="n">Enter</span> <span class="o">=</span> <span class="s1">&#39;7&#39;</span>
+    <span class="n">Leave</span> <span class="o">=</span> <span class="s1">&#39;8&#39;</span>
+    <span class="n">FocusIn</span> <span class="o">=</span> <span class="s1">&#39;9&#39;</span>
+    <span class="n">FocusOut</span> <span class="o">=</span> <span class="s1">&#39;10&#39;</span>
+    <span class="n">Keymap</span> <span class="o">=</span> <span class="s1">&#39;11&#39;</span>           <span class="c1"># undocumented</span>
+    <span class="n">Expose</span> <span class="o">=</span> <span class="s1">&#39;12&#39;</span>
+    <span class="n">GraphicsExpose</span> <span class="o">=</span> <span class="s1">&#39;13&#39;</span>   <span class="c1"># undocumented</span>
+    <span class="n">NoExpose</span> <span class="o">=</span> <span class="s1">&#39;14&#39;</span>         <span class="c1"># undocumented</span>
+    <span class="n">Visibility</span> <span class="o">=</span> <span class="s1">&#39;15&#39;</span>
+    <span class="n">Create</span> <span class="o">=</span> <span class="s1">&#39;16&#39;</span>
+    <span class="n">Destroy</span> <span class="o">=</span> <span class="s1">&#39;17&#39;</span>
+    <span class="n">Unmap</span> <span class="o">=</span> <span class="s1">&#39;18&#39;</span>
+    <span class="n">Map</span> <span class="o">=</span> <span class="s1">&#39;19&#39;</span>
+    <span class="n">MapRequest</span> <span class="o">=</span> <span class="s1">&#39;20&#39;</span>
+    <span class="n">Reparent</span> <span class="o">=</span> <span class="s1">&#39;21&#39;</span>
+    <span class="n">Configure</span> <span class="o">=</span> <span class="s1">&#39;22&#39;</span>
+    <span class="n">ConfigureRequest</span> <span class="o">=</span> <span class="s1">&#39;23&#39;</span>
+    <span class="n">Gravity</span> <span class="o">=</span> <span class="s1">&#39;24&#39;</span>
+    <span class="n">ResizeRequest</span> <span class="o">=</span> <span class="s1">&#39;25&#39;</span>
+    <span class="n">Circulate</span> <span class="o">=</span> <span class="s1">&#39;26&#39;</span>
+    <span class="n">CirculateRequest</span> <span class="o">=</span> <span class="s1">&#39;27&#39;</span>
+    <span class="n">Property</span> <span class="o">=</span> <span class="s1">&#39;28&#39;</span>
+    <span class="n">SelectionClear</span> <span class="o">=</span> <span class="s1">&#39;29&#39;</span>   <span class="c1"># undocumented</span>
+    <span class="n">SelectionRequest</span> <span class="o">=</span> <span class="s1">&#39;30&#39;</span> <span class="c1"># undocumented</span>
+    <span class="n">Selection</span> <span class="o">=</span> <span class="s1">&#39;31&#39;</span>        <span class="c1"># undocumented</span>
+    <span class="n">Colormap</span> <span class="o">=</span> <span class="s1">&#39;32&#39;</span>
+    <span class="n">ClientMessage</span> <span class="o">=</span> <span class="s1">&#39;33&#39;</span>    <span class="c1"># undocumented</span>
+    <span class="n">Mapping</span> <span class="o">=</span> <span class="s1">&#39;34&#39;</span>          <span class="c1"># undocumented</span>
+    <span class="n">VirtualEvent</span> <span class="o">=</span> <span class="s1">&#39;35&#39;</span><span class="p">,</span>    <span class="c1"># undocumented</span>
+    <span class="n">Activate</span> <span class="o">=</span> <span class="s1">&#39;36&#39;</span><span class="p">,</span>
+    <span class="n">Deactivate</span> <span class="o">=</span> <span class="s1">&#39;37&#39;</span><span class="p">,</span>
+    <span class="n">MouseWheel</span> <span class="o">=</span> <span class="s1">&#39;38&#39;</span><span class="p">,</span>
+    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span>
+
 <span class="k">class</span> <span class="nc">Event</span><span class="p">:</span>
     <span class="sd">&quot;&quot;&quot;Container for the properties of an event.</span>
 
@@ -349,7 +377,43 @@
 <span class="sd">    widget - widget in which the event occurred</span>
 <span class="sd">    delta - delta of wheel movement (MouseWheel)</span>
 <span class="sd">    &quot;&quot;&quot;</span>
-    <span class="k">pass</span>
+    <span class="k">def</span> <span class="fm">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="n">attrs</span> <span class="o">=</span> <span class="p">{</span><span class="n">k</span><span class="p">:</span> <span class="n">v</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="vm">__dict__</span><span class="o">.</span><span class="n">items</span><span class="p">()</span> <span class="k">if</span> <span class="n">v</span> <span class="o">!=</span> <span class="s1">&#39;??&#39;</span><span class="p">}</span>
+        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">char</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;char&#39;</span><span class="p">]</span>
+        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">char</span> <span class="o">!=</span> <span class="s1">&#39;??&#39;</span><span class="p">:</span>
+            <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;char&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">char</span><span class="p">)</span>
+        <span class="k">if</span> <span class="ow">not</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">&#39;send_event&#39;</span><span class="p">,</span> <span class="kc">True</span><span class="p">):</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;send_event&#39;</span><span class="p">]</span>
+        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;state&#39;</span><span class="p">]</span>
+        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">state</span><span class="p">,</span> <span class="nb">int</span><span class="p">):</span>
+            <span class="n">state</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span>
+            <span class="n">mods</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;Shift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lock&#39;</span><span class="p">,</span> <span class="s1">&#39;Control&#39;</span><span class="p">,</span>
+                    <span class="s1">&#39;Mod1&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod2&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod3&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod4&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod5&#39;</span><span class="p">,</span>
+                    <span class="s1">&#39;Button1&#39;</span><span class="p">,</span> <span class="s1">&#39;Button2&#39;</span><span class="p">,</span> <span class="s1">&#39;Button3&#39;</span><span class="p">,</span> <span class="s1">&#39;Button4&#39;</span><span class="p">,</span> <span class="s1">&#39;Button5&#39;</span><span class="p">)</span>
+            <span class="n">s</span> <span class="o">=</span> <span class="p">[]</span>
+            <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">mods</span><span class="p">):</span>
+                <span class="k">if</span> <span class="n">state</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="p">):</span>
+                    <span class="n">s</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
+            <span class="n">state</span> <span class="o">=</span> <span class="n">state</span> <span class="o">&amp;</span> <span class="o">~</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">mods</span><span class="p">))</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
+            <span class="k">if</span> <span class="n">state</span> <span class="ow">or</span> <span class="ow">not</span> <span class="n">s</span><span class="p">:</span>
+                <span class="n">s</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">hex</span><span class="p">(</span><span class="n">state</span><span class="p">))</span>
+            <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;state&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">delta</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;delta&#39;</span><span class="p">]</span>
+        <span class="c1"># widget usually is known</span>
+        <span class="c1"># serial and time are not very interesting</span>
+        <span class="c1"># keysym_num duplicates keysym</span>
+        <span class="c1"># x_root and y_root mostly duplicate x and y</span>
+        <span class="n">keys</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;send_event&#39;</span><span class="p">,</span>
+                <span class="s1">&#39;state&#39;</span><span class="p">,</span> <span class="s1">&#39;keysym&#39;</span><span class="p">,</span> <span class="s1">&#39;keycode&#39;</span><span class="p">,</span> <span class="s1">&#39;char&#39;</span><span class="p">,</span>
+                <span class="s1">&#39;num&#39;</span><span class="p">,</span> <span class="s1">&#39;delta&#39;</span><span class="p">,</span> <span class="s1">&#39;focus&#39;</span><span class="p">,</span>
+                <span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="s1">&#39;y&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span><span class="p">)</span>
+        <span class="k">return</span> <span class="s1">&#39;&lt;</span><span class="si">%s</span><span class="s1"> event</span><span class="si">%s</span><span class="s1">&gt;&#39;</span> <span class="o">%</span> <span class="p">(</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">type</span><span class="p">,</span>
+            <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; </span><span class="si">%s</span><span class="s1">=</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">attrs</span><span class="p">[</span><span class="n">k</span><span class="p">])</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">keys</span> <span class="k">if</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">attrs</span><span class="p">)</span>
+        <span class="p">)</span>
 
 <span class="n">_support_default_root</span> <span class="o">=</span> <span class="mi">1</span>
 <span class="n">_default_root</span> <span class="o">=</span> <span class="kc">None</span>
@@ -376,7 +440,7 @@
         <span class="n">code</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
     <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
         <span class="k">pass</span>
-    <span class="k">raise</span> <span class="ne">SystemExit</span><span class="p">,</span> <span class="n">code</span>
+    <span class="k">raise</span> <span class="ne">SystemExit</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
 
 <span class="n">_varnum</span> <span class="o">=</span> <span class="mi">0</span>
 <span class="k">class</span> <span class="nc">Variable</span><span class="p">:</span>
@@ -385,6 +449,7 @@
 <span class="sd">    Subclasses StringVar, IntVar, DoubleVar, BooleanVar are specializations</span>
 <span class="sd">    that constrain the type of the value returned from get().&quot;&quot;&quot;</span>
     <span class="n">_default</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
+    <span class="n">_tk</span> <span class="o">=</span> <span class="kc">None</span>
     <span class="n">_tclCommands</span> <span class="o">=</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a variable</span>
@@ -396,6 +461,11 @@
 <span class="sd">        If NAME matches an existing variable and VALUE is omitted</span>
 <span class="sd">        then the existing value is retained.</span>
 <span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># check for type of NAME parameter to override weird error message</span>
+        <span class="c1"># raised from Modules/_tkinter.c:SetVar like:</span>
+        <span class="c1"># TypeError: setvar() takes exactly 3 arguments (2 given)</span>
+        <span class="k">if</span> <span class="n">name</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span> <span class="ow">and</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
+            <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s2">&quot;name must be a string&quot;</span><span class="p">)</span>
         <span class="k">global</span> <span class="n">_varnum</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">master</span><span class="p">:</span>
             <span class="n">master</span> <span class="o">=</span> <span class="n">_default_root</span>
@@ -407,9 +477,9 @@
             <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="s1">&#39;PY_VAR&#39;</span> <span class="o">+</span> <span class="nb">repr</span><span class="p">(</span><span class="n">_varnum</span><span class="p">)</span>
             <span class="n">_varnum</span> <span class="o">+=</span> <span class="mi">1</span>
         <span class="k">if</span> <span class="n">value</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">initialize</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
         <span class="k">elif</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;info&quot;</span><span class="p">,</span> <span class="s2">&quot;exists&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)):</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_default</span><span class="p">)</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">initialize</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_default</span><span class="p">)</span>
     <span class="k">def</span> <span class="fm">__del__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Unset the variable in Tcl.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
@@ -427,22 +497,16 @@
     <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the variable to VALUE.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalsetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
+    <span class="n">initialize</span> <span class="o">=</span> <span class="nb">set</span>
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return value of variable.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">trace_variable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Define a trace callback for the variable.</span>
 
-<span class="sd">        MODE is one of &quot;r&quot;, &quot;w&quot;, &quot;u&quot; for read, write, undefine.</span>
-<span class="sd">        CALLBACK must be a function which is called when</span>
-<span class="sd">        the variable is read, written or undefined.</span>
-
-<span class="sd">        Return the name of the callback.</span>
-<span class="sd">        &quot;&quot;&quot;</span>
+    <span class="k">def</span> <span class="nf">_register</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
         <span class="n">f</span> <span class="o">=</span> <span class="n">CallWrapper</span><span class="p">(</span><span class="n">callback</span><span class="p">,</span> <span class="kc">None</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_root</span><span class="p">)</span><span class="o">.</span><span class="fm">__call__</span>
         <span class="n">cbname</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="nb">id</span><span class="p">(</span><span class="n">f</span><span class="p">))</span>
         <span class="k">try</span><span class="p">:</span>
-            <span class="n">callback</span> <span class="o">=</span> <span class="n">callback</span><span class="o">.</span><span class="n">im_func</span>
+            <span class="n">callback</span> <span class="o">=</span> <span class="n">callback</span><span class="o">.</span><span class="vm">__func__</span>
         <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
             <span class="k">pass</span>
         <span class="k">try</span><span class="p">:</span>
@@ -453,18 +517,80 @@
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="o">=</span> <span class="p">[]</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
+        <span class="k">return</span> <span class="n">cbname</span>
+
+    <span class="k">def</span> <span class="nf">trace_add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Define a trace callback for the variable.</span>
+
+<span class="sd">        Mode is one of &quot;read&quot;, &quot;write&quot;, &quot;unset&quot;, or a list or tuple of</span>
+<span class="sd">        such strings.</span>
+<span class="sd">        Callback must be a function which is called when the variable is</span>
+<span class="sd">        read, written or unset.</span>
+
+<span class="sd">        Return the name of the callback.</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="n">cbname</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">callback</span><span class="p">)</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;trace&#39;</span><span class="p">,</span> <span class="s1">&#39;add&#39;</span><span class="p">,</span> <span class="s1">&#39;variable&#39;</span><span class="p">,</span>
+                      <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="p">(</span><span class="n">cbname</span><span class="p">,))</span>
+        <span class="k">return</span> <span class="n">cbname</span>
+
+    <span class="k">def</span> <span class="nf">trace_remove</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Delete the trace callback for a variable.</span>
+
+<span class="sd">        Mode is one of &quot;read&quot;, &quot;write&quot;, &quot;unset&quot; or a list or tuple of</span>
+<span class="sd">        such strings.  Must be same as were specified in trace_add().</span>
+<span class="sd">        cbname is the name of the callback returned from trace_add().</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;trace&#39;</span><span class="p">,</span> <span class="s1">&#39;remove&#39;</span><span class="p">,</span> <span class="s1">&#39;variable&#39;</span><span class="p">,</span>
+                      <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">)</span>
+        <span class="k">for</span> <span class="n">m</span><span class="p">,</span> <span class="n">ca</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">trace_info</span><span class="p">():</span>
+            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">ca</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">cbname</span><span class="p">:</span>
+                <span class="k">break</span>
+        <span class="k">else</span><span class="p">:</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">deletecommand</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
+            <span class="k">try</span><span class="p">:</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
+            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+                <span class="k">pass</span>
+
+    <span class="k">def</span> <span class="nf">trace_info</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Return all trace callback information.&quot;&quot;&quot;</span>
+        <span class="n">splitlist</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span>
+        <span class="k">return</span> <span class="p">[(</span><span class="n">splitlist</span><span class="p">(</span><span class="n">k</span><span class="p">),</span> <span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="nb">map</span><span class="p">(</span><span class="n">splitlist</span><span class="p">,</span>
+            <span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;trace&#39;</span><span class="p">,</span> <span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="s1">&#39;variable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)))]</span>
+
+    <span class="k">def</span> <span class="nf">trace_variable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Define a trace callback for the variable.</span>
+
+<span class="sd">        MODE is one of &quot;r&quot;, &quot;w&quot;, &quot;u&quot; for read, write, undefine.</span>
+<span class="sd">        CALLBACK must be a function which is called when</span>
+<span class="sd">        the variable is read, written or undefined.</span>
+
+<span class="sd">        Return the name of the callback.</span>
+
+<span class="sd">        This deprecated method wraps a deprecated Tcl method that will</span>
+<span class="sd">        likely be removed in the future.  Use trace_add() instead.</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># TODO: Add deprecation warning</span>
+        <span class="n">cbname</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">callback</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;variable&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">)</span>
         <span class="k">return</span> <span class="n">cbname</span>
+
     <span class="n">trace</span> <span class="o">=</span> <span class="n">trace_variable</span>
+
     <span class="k">def</span> <span class="nf">trace_vdelete</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Delete the trace callback for a variable.</span>
 
 <span class="sd">        MODE is one of &quot;r&quot;, &quot;w&quot;, &quot;u&quot; for read, write, undefine.</span>
 <span class="sd">        CBNAME is the name of the callback returned from trace_variable or trace.</span>
+
+<span class="sd">        This deprecated method wraps a deprecated Tcl method that will</span>
+<span class="sd">        likely be removed in the future.  Use trace_remove() instead.</span>
 <span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># TODO: Add deprecation warning</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;vdelete&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">)</span>
         <span class="n">cbname</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">cbname</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
-        <span class="k">for</span> <span class="n">m</span><span class="p">,</span> <span class="n">ca</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">trace_vinfo</span><span class="p">():</span>
+        <span class="k">for</span> <span class="n">m</span><span class="p">,</span> <span class="n">ca</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">trace_info</span><span class="p">():</span>
             <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">ca</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">cbname</span><span class="p">:</span>
                 <span class="k">break</span>
         <span class="k">else</span><span class="p">:</span>
@@ -473,10 +599,17 @@
                 <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
             <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
                 <span class="k">pass</span>
+
     <span class="k">def</span> <span class="nf">trace_vinfo</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Return all trace callback information.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;vinfo&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)))</span>
+        <span class="sd">&quot;&quot;&quot;Return all trace callback information.</span>
+
+<span class="sd">        This deprecated method wraps a deprecated Tcl method that will</span>
+<span class="sd">        likely be removed in the future.  Use trace_info() instead.</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># TODO: Add deprecation warning</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;vinfo&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))]</span>
+
     <span class="k">def</span> <span class="fm">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Comparison for equality (==).</span>
 
@@ -504,7 +637,7 @@
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return value of variable as string.&quot;&quot;&quot;</span>
         <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
-        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">basestring</span><span class="p">):</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
             <span class="k">return</span> <span class="n">value</span>
         <span class="k">return</span> <span class="nb">str</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
 
@@ -523,15 +656,13 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="n">Variable</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
 
-    <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Set the variable to value, converting booleans to integers.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">bool</span><span class="p">):</span>
-            <span class="n">value</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
-        <span class="k">return</span> <span class="n">Variable</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
-
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the value of the variable as an integer.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+        <span class="k">except</span> <span class="p">(</span><span class="ne">TypeError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
+            <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">DoubleVar</span><span class="p">(</span><span class="n">Variable</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Value holder for float variables.&quot;&quot;&quot;</span>
@@ -550,7 +681,7 @@
 
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the value of the variable as a float.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">BooleanVar</span><span class="p">(</span><span class="n">Variable</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Value holder for boolean variables.&quot;&quot;&quot;</span>
@@ -570,10 +701,14 @@
     <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the variable to VALUE.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalsetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
+    <span class="n">initialize</span> <span class="o">=</span> <span class="nb">set</span>
 
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the value of the variable as a bool.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">&quot;invalid literal for getboolean()&quot;</span><span class="p">)</span>
 
 <span class="k">def</span> <span class="nf">mainloop</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Run the main loop of Tcl.&quot;&quot;&quot;</span>
@@ -585,7 +720,10 @@
 
 <span class="k">def</span> <span class="nf">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Convert true and false to integer values 1 and 0.&quot;&quot;&quot;</span>
-    <span class="k">return</span> <span class="n">_default_root</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+    <span class="k">try</span><span class="p">:</span>
+        <span class="k">return</span> <span class="n">_default_root</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+    <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
+        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">&quot;invalid literal for getboolean()&quot;</span><span class="p">)</span>
 
 <span class="c1"># Methods defined on both toplevel and interior widgets</span>
 <span class="k">class</span> <span class="nc">Misc</span><span class="p">:</span>
@@ -593,6 +731,9 @@
 
 <span class="sd">    Base class which defines methods common for interior widgets.&quot;&quot;&quot;</span>
 
+    <span class="c1"># used for generating child widget names</span>
+    <span class="n">_last_child_ids</span> <span class="o">=</span> <span class="kc">None</span>
+
     <span class="c1"># XXX font command?</span>
     <span class="n">_tclCommands</span> <span class="o">=</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
@@ -639,13 +780,7 @@
 <span class="sd">        background, highlightColor, selectForeground,</span>
 <span class="sd">        disabledForeground, insertBackground, troughColor.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="s1">&#39;tk_setPalette&#39;</span><span class="p">,)</span>
-              <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">kw</span><span class="o">.</span><span class="n">items</span><span class="p">()))</span>
-    <span class="k">def</span> <span class="nf">tk_menuBar</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Do not use. Needed in Tk 3.6 and earlier.&quot;&quot;&quot;</span>
-        <span class="c1"># obsolete since Tk 4.0</span>
-        <span class="kn">import</span> <span class="nn">warnings</span>
-        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s1">&#39;tk_menuBar() does nothing and will be removed in 3.6&#39;</span><span class="p">,</span>
-                      <span class="ne">DeprecationWarning</span><span class="p">,</span> <span class="n">stacklevel</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
+              <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">kw</span><span class="o">.</span><span class="n">items</span><span class="p">())))</span>
     <span class="k">def</span> <span class="nf">wait_variable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;PY_VAR&#39;</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Wait until the variable is modified.</span>
 
@@ -674,11 +809,26 @@
     <span class="k">def</span> <span class="nf">getvar</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;PY_VAR&#39;</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return value of Tcl variable NAME.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getvar</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
-    <span class="n">getint</span> <span class="o">=</span> <span class="nb">int</span>
-    <span class="n">getdouble</span> <span class="o">=</span> <span class="nb">float</span>
+
+    <span class="k">def</span> <span class="nf">getint</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">except</span> <span class="n">TclError</span> <span class="k">as</span> <span class="n">exc</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">exc</span><span class="p">))</span>
+
+    <span class="k">def</span> <span class="nf">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">except</span> <span class="n">TclError</span> <span class="k">as</span> <span class="n">exc</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">exc</span><span class="p">))</span>
+
     <span class="k">def</span> <span class="nf">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a boolean value for Tcl boolean values true and false given as parameter.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">&quot;invalid literal for getboolean()&quot;</span><span class="p">)</span>
+
     <span class="k">def</span> <span class="nf">focus_set</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Direct input focus to this widget.</span>
 
@@ -944,13 +1094,10 @@
         <span class="sd">&quot;&quot;&quot;Raise this widget in the stacking order.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;raise&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">aboveThis</span><span class="p">)</span>
     <span class="n">lift</span> <span class="o">=</span> <span class="n">tkraise</span>
-    <span class="k">def</span> <span class="nf">colormodel</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Useless. Not implemented in Tk.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk&#39;</span><span class="p">,</span> <span class="s1">&#39;colormodel&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_atom</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">displayof</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return integer which represents atom NAME.&quot;&quot;&quot;</span>
         <span class="n">args</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;atom&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_displayof</span><span class="p">(</span><span class="n">displayof</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">name</span><span class="p">,)</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_atomname</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">displayof</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return name of atom with identifier ID.&quot;&quot;&quot;</span>
         <span class="n">args</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;atomname&#39;</span><span class="p">)</span> \
@@ -958,7 +1105,7 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_cells</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return number of cells in the colormap for this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;cells&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_children</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all widgets which are children of this widget.&quot;&quot;&quot;</span>
@@ -989,22 +1136,22 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_depth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of bits per pixel.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;depth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;depth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_exists</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return true if this widget exists.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;exists&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_fpixels</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">number</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels for the given distance NUMBER</span>
 <span class="sd">        (e.g. &quot;3c&quot;) as float.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;fpixels&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">number</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_geometry</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return geometry string for this widget in the form &quot;widthxheight+X+Y&quot;.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;geometry&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_height</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return height of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_id</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return identifier ID for this widget.&quot;&quot;&quot;</span>
@@ -1015,7 +1162,7 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_ismapped</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return true if this widget is mapped.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;ismapped&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_manager</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the window manager name for this widget.&quot;&quot;&quot;</span>
@@ -1033,11 +1180,11 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_pixels</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">number</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Rounded integer value of winfo_fpixels.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pixels&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">number</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_pointerx</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the x coordinate of the pointer on the root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pointerx&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_pointerxy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a tuple of x and y coordinates of the pointer on the root window.&quot;&quot;&quot;</span>
@@ -1045,15 +1192,15 @@
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pointerxy&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_pointery</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y coordinate of the pointer on the root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pointery&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_reqheight</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return requested height of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;reqheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_reqwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return requested width of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;reqwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_rgb</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">color</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return tuple of decimal values for red, green, blue for</span>
@@ -1063,12 +1210,12 @@
     <span class="k">def</span> <span class="nf">winfo_rootx</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return x coordinate of upper left corner of this widget on the</span>
 <span class="sd">        root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;rootx&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_rooty</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return y coordinate of upper left corner of this widget on the</span>
 <span class="sd">        root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;rooty&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screen</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the screen name of this widget.&quot;&quot;&quot;</span>
@@ -1076,27 +1223,27 @@
     <span class="k">def</span> <span class="nf">winfo_screencells</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of the cells in the colormap of the screen</span>
 <span class="sd">        of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screencells&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screendepth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of bits per pixel of the root window of the</span>
 <span class="sd">        screen of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screendepth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenheight</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the height of the screen of this widget</span>
 <span class="sd">        in pixel.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenmmheight</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the height of the screen of</span>
 <span class="sd">        this widget in mm.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenmmheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenmmwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the width of the screen of</span>
 <span class="sd">        this widget in mm.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenmmwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenvisual</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return one of the strings directcolor, grayscale, pseudocolor,</span>
@@ -1106,7 +1253,7 @@
     <span class="k">def</span> <span class="nf">winfo_screenwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the width of the screen of</span>
 <span class="sd">        this widget in pixel.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_server</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return information of the X-Server of the screen of this widget in</span>
@@ -1118,7 +1265,7 @@
             <span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;toplevel&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_viewable</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return true if the widget and all its higher ancestors are mapped.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;viewable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_visual</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return one of the strings directcolor, grayscale, pseudocolor,</span>
@@ -1128,18 +1275,16 @@
     <span class="k">def</span> <span class="nf">winfo_visualid</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the X identifier for the visual for this widget.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;visualid&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">winfo_visualsavailable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">includeids</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
+    <span class="k">def</span> <span class="nf">winfo_visualsavailable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">includeids</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all visuals available for the screen</span>
 <span class="sd">        of this widget.</span>
 
 <span class="sd">        Each item in the list consists of a visual name (see winfo_visual), a</span>
-<span class="sd">        depth and if INCLUDEIDS=1 is given also the X identifier.&quot;&quot;&quot;</span>
-        <span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">split</span><span class="p">(</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;visualsavailable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span>
-                     <span class="n">includeids</span> <span class="ow">and</span> <span class="s1">&#39;includeids&#39;</span> <span class="ow">or</span> <span class="kc">None</span><span class="p">))</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span><span class="p">:</span>
-            <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">data</span><span class="p">)]</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__winfo_parseitem</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
+<span class="sd">        depth and if includeids is true is given also the X identifier.&quot;&quot;&quot;</span>
+        <span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;visualsavailable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span>
+                            <span class="s1">&#39;includeids&#39;</span> <span class="k">if</span> <span class="n">includeids</span> <span class="k">else</span> <span class="kc">None</span><span class="p">)</span>
+        <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">data</span><span class="p">)]</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">__winfo_parseitem</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">data</span><span class="p">]</span>
     <span class="k">def</span> <span class="nf">__winfo_parseitem</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">t</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="n">t</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__winfo_getint</span><span class="p">,</span> <span class="n">t</span><span class="p">[</span><span class="mi">1</span><span class="p">:]))</span>
@@ -1150,37 +1295,37 @@
         <span class="sd">&quot;&quot;&quot;Return the height of the virtual root window associated with this</span>
 <span class="sd">        widget in pixels. If there is no virtual root window return the</span>
 <span class="sd">        height of the screen.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrootheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_vrootwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the width of the virtual root window associated with this</span>
 <span class="sd">        widget in pixel. If there is no virtual root window return the</span>
 <span class="sd">        width of the screen.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrootwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_vrootx</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the x offset of the virtual root relative to the root</span>
 <span class="sd">        window of the screen of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrootx&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_vrooty</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y offset of the virtual root relative to the root</span>
 <span class="sd">        window of the screen of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrooty&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_width</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the width of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_x</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the x coordinate of the upper left corner of this widget</span>
 <span class="sd">        in the parent.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_y</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y coordinate of the upper left corner of this widget</span>
 <span class="sd">        in the parent.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;y&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Enter event loop until all pending events have been processed by Tcl.&quot;&quot;&quot;</span>
@@ -1204,7 +1349,7 @@
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;bindtags&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">tagList</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">_bind</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">what</span><span class="p">,</span> <span class="n">sequence</span><span class="p">,</span> <span class="n">func</span><span class="p">,</span> <span class="n">add</span><span class="p">,</span> <span class="n">needcleanup</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">func</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">what</span> <span class="o">+</span> <span class="p">(</span><span class="n">sequence</span><span class="p">,</span> <span class="n">func</span><span class="p">))</span>
         <span class="k">elif</span> <span class="n">func</span><span class="p">:</span>
             <span class="n">funcid</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_substitute</span><span class="p">,</span>
@@ -1297,11 +1442,11 @@
     <span class="k">def</span> <span class="nf">_getints</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">string</span><span class="p">:</span>
-            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="n">getint</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
+            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
     <span class="k">def</span> <span class="nf">_getdoubles</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">string</span><span class="p">:</span>
-            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="n">getdouble</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
+            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
     <span class="k">def</span> <span class="nf">_getboolean</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">string</span><span class="p">:</span>
@@ -1332,18 +1477,17 @@
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
             <span class="k">if</span> <span class="n">v</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
                 <span class="k">if</span> <span class="n">k</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;_&#39;</span><span class="p">:</span> <span class="n">k</span> <span class="o">=</span> <span class="n">k</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
-                <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+                <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">v</span><span class="p">):</span>
                     <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
                 <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="p">(</span><span class="nb">tuple</span><span class="p">,</span> <span class="nb">list</span><span class="p">)):</span>
                     <span class="n">nv</span> <span class="o">=</span> <span class="p">[]</span>
                     <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">v</span><span class="p">:</span>
-                        <span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="p">(</span><span class="n">basestring</span><span class="p">,</span> <span class="nb">int</span><span class="p">,</span> <span class="n">long</span><span class="p">)):</span>
+                        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="nb">int</span><span class="p">):</span>
+                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
+                        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
+                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">_stringify</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
+                        <span class="k">else</span><span class="p">:</span>
                             <span class="k">break</span>
-                        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">long</span><span class="p">)):</span>
-                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">%d</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">item</span><span class="p">)</span>
-                        <span class="k">else</span><span class="p">:</span>
-                            <span class="c1"># format it to proper Tcl code if it contains space</span>
-                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">_stringify</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
                     <span class="k">else</span><span class="p">:</span>
                         <span class="n">v</span> <span class="o">=</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">nv</span><span class="p">)</span>
                 <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
@@ -1373,7 +1517,7 @@
         <span class="n">f</span> <span class="o">=</span> <span class="n">CallWrapper</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">subst</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="fm">__call__</span>
         <span class="n">name</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="nb">id</span><span class="p">(</span><span class="n">f</span><span class="p">))</span>
         <span class="k">try</span><span class="p">:</span>
-            <span class="n">func</span> <span class="o">=</span> <span class="n">func</span><span class="o">.</span><span class="n">im_func</span>
+            <span class="n">func</span> <span class="o">=</span> <span class="n">func</span><span class="o">.</span><span class="vm">__func__</span>
         <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
             <span class="k">pass</span>
         <span class="k">try</span><span class="p">:</span>
@@ -1401,12 +1545,12 @@
         <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_subst_format</span><span class="p">):</span> <span class="k">return</span> <span class="n">args</span>
         <span class="n">getboolean</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span>
 
-        <span class="n">getint</span> <span class="o">=</span> <span class="nb">int</span>
+        <span class="n">getint</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span>
         <span class="k">def</span> <span class="nf">getint_event</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
             <span class="sd">&quot;&quot;&quot;Tk changed behavior in 8.4.2, returning &quot;??&quot; rather more often.&quot;&quot;&quot;</span>
             <span class="k">try</span><span class="p">:</span>
-                <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
-            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+                <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+            <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
                 <span class="k">return</span> <span class="n">s</span>
 
         <span class="n">nsign</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">k</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">A</span><span class="p">,</span> <span class="n">E</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">W</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">D</span> <span class="o">=</span> <span class="n">args</span>
@@ -1441,7 +1585,10 @@
         <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span> <span class="k">pass</span>
         <span class="n">e</span><span class="o">.</span><span class="n">keysym</span> <span class="o">=</span> <span class="n">K</span>
         <span class="n">e</span><span class="o">.</span><span class="n">keysym_num</span> <span class="o">=</span> <span class="n">getint_event</span><span class="p">(</span><span class="n">N</span><span class="p">)</span>
-        <span class="n">e</span><span class="o">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">T</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="n">e</span><span class="o">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">EventType</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>
+        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+            <span class="n">e</span><span class="o">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">T</span>
         <span class="k">try</span><span class="p">:</span>
             <span class="n">e</span><span class="o">.</span><span class="n">widget</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">W</span><span class="p">)</span>
         <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
@@ -1450,13 +1597,12 @@
         <span class="n">e</span><span class="o">.</span><span class="n">y_root</span> <span class="o">=</span> <span class="n">getint_event</span><span class="p">(</span><span class="n">Y</span><span class="p">)</span>
         <span class="k">try</span><span class="p">:</span>
             <span class="n">e</span><span class="o">.</span><span class="n">delta</span> <span class="o">=</span> <span class="n">getint</span><span class="p">(</span><span class="n">D</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+        <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
             <span class="n">e</span><span class="o">.</span><span class="n">delta</span> <span class="o">=</span> <span class="mi">0</span>
         <span class="k">return</span> <span class="p">(</span><span class="n">e</span><span class="p">,)</span>
     <span class="k">def</span> <span class="nf">_report_exception</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-        <span class="kn">import</span> <span class="nn">sys</span>
-        <span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_type</span><span class="p">,</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_value</span><span class="p">,</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_traceback</span>
+        <span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_info</span><span class="p">()</span>
         <span class="n">root</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_root</span><span class="p">()</span>
         <span class="n">root</span><span class="o">.</span><span class="n">report_callback_exception</span><span class="p">(</span><span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span><span class="p">)</span>
 
@@ -1480,7 +1626,7 @@
             <span class="n">cnf</span> <span class="o">=</span> <span class="n">_cnfmerge</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">cnf</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure</span><span class="p">(</span><span class="n">_flatten</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">cmd</span><span class="p">)))</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure1</span><span class="p">(</span><span class="n">_flatten</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">cmd</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">cnf</span><span class="p">)))</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">_flatten</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">cmd</span><span class="p">))</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">))</span>
     <span class="c1"># These used to be defined in Widget:</span>
@@ -1499,8 +1645,6 @@
     <span class="fm">__getitem__</span> <span class="o">=</span> <span class="n">cget</span>
     <span class="k">def</span> <span class="fm">__setitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">configure</span><span class="p">({</span><span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">})</span>
-    <span class="k">def</span> <span class="fm">__contains__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
-        <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s2">&quot;Tkinter objects don&#39;t support &#39;in&#39; tests.&quot;</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">keys</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all resource names of this widget.&quot;&quot;&quot;</span>
         <span class="n">splitlist</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span>
@@ -1509,6 +1653,11 @@
     <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the window path name of this widget.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span>
+
+    <span class="k">def</span> <span class="fm">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="k">return</span> <span class="s1">&#39;&lt;</span><span class="si">%s</span><span class="s1">.</span><span class="si">%s</span><span class="s1"> object </span><span class="si">%s</span><span class="s1">&gt;&#39;</span> <span class="o">%</span> <span class="p">(</span>
+            <span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__module__</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__qualname__</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
+
     <span class="c1"># Pack methods that apply to the master</span>
     <span class="n">_noarg_</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;_noarg_&#39;</span><span class="p">]</span>
     <span class="k">def</span> <span class="nf">pack_propagate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">flag</span><span class="o">=</span><span class="n">_noarg_</span><span class="p">):</span>
@@ -1527,19 +1676,26 @@
     <span class="k">def</span> <span class="nf">pack_slaves</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all slaves of this widget</span>
 <span class="sd">        in its packing order.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span>
-               <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
-                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;pack&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)))</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
+                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;pack&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))]</span>
     <span class="n">slaves</span> <span class="o">=</span> <span class="n">pack_slaves</span>
     <span class="c1"># Place method that applies to the master</span>
     <span class="k">def</span> <span class="nf">place_slaves</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all slaves of this widget</span>
 <span class="sd">        in its packing order.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span>
-               <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
-                       <span class="s1">&#39;place&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)))</span>
+                       <span class="s1">&#39;place&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))]</span>
     <span class="c1"># Grid methods that apply to the master</span>
+    <span class="k">def</span> <span class="nf">grid_anchor</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">anchor</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;The anchor value controls how to place the grid within the</span>
+<span class="sd">        master when no row/column has any weight.</span>
+
+<span class="sd">        The default anchor is nw.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;grid&#39;</span><span class="p">,</span> <span class="s1">&#39;anchor&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">anchor</span><span class="p">)</span>
+    <span class="n">anchor</span> <span class="o">=</span> <span class="n">grid_anchor</span>
     <span class="k">def</span> <span class="nf">grid_bbox</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">column</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">row</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">col2</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">row2</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a tuple of integer coordinates for the bounding</span>
 <span class="sd">        box of this widget controlled by the geometry manager grid.</span>
@@ -1558,7 +1714,6 @@
         <span class="k">if</span> <span class="n">col2</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span> <span class="ow">and</span> <span class="n">row2</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span> <span class="o">+</span> <span class="p">(</span><span class="n">col2</span><span class="p">,</span> <span class="n">row2</span><span class="p">)</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getints</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">))</span> <span class="ow">or</span> <span class="kc">None</span>
-
     <span class="n">bbox</span> <span class="o">=</span> <span class="n">grid_bbox</span>
 
     <span class="k">def</span> <span class="nf">_gridconvvalue</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
@@ -1568,16 +1723,16 @@
                 <span class="k">if</span> <span class="ow">not</span> <span class="n">svalue</span><span class="p">:</span>
                     <span class="k">return</span> <span class="kc">None</span>
                 <span class="k">elif</span> <span class="s1">&#39;.&#39;</span> <span class="ow">in</span> <span class="n">svalue</span><span class="p">:</span>
-                    <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
+                    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
                 <span class="k">else</span><span class="p">:</span>
-                    <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
-            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+                    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
+            <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
                 <span class="k">pass</span>
         <span class="k">return</span> <span class="n">value</span>
 
     <span class="k">def</span> <span class="nf">_grid_configure</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
             <span class="k">if</span> <span class="n">cnf</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">:]</span> <span class="o">==</span> <span class="s1">&#39;_&#39;</span><span class="p">:</span>
                 <span class="n">cnf</span> <span class="o">=</span> <span class="n">cnf</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
             <span class="k">if</span> <span class="n">cnf</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="s1">&#39;-&#39;</span><span class="p">:</span>
@@ -1644,9 +1799,9 @@
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-row&#39;</span><span class="p">,</span> <span class="n">row</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">column</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-column&#39;</span><span class="p">,</span> <span class="n">column</span><span class="p">)</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span>
-               <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
-                   <span class="p">(</span><span class="s1">&#39;grid&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)))</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+                   <span class="p">(</span><span class="s1">&#39;grid&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))]</span>
 
     <span class="c1"># Support for the &quot;event&quot; command, new in Tk 4.2.</span>
     <span class="c1"># By Case Roole.</span>
@@ -1703,8 +1858,8 @@
             <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">subst</span><span class="p">:</span>
                 <span class="n">args</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">subst</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">SystemExit</span><span class="p">,</span> <span class="n">msg</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">SystemExit</span><span class="p">,</span> <span class="n">msg</span>
+        <span class="k">except</span> <span class="ne">SystemExit</span><span class="p">:</span>
+            <span class="k">raise</span>
         <span class="k">except</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">_report_exception</span><span class="p">()</span>
 
@@ -1803,7 +1958,8 @@
         <span class="k">if</span> <span class="n">wlist</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
         <span class="k">else</span><span class="p">:</span>
-            <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)))</span>
+            <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
+                    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))]</span>
     <span class="n">colormapwindows</span> <span class="o">=</span> <span class="n">wm_colormapwindows</span>
     <span class="k">def</span> <span class="nf">wm_command</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Store VALUE in WM_COMMAND property. It is the command</span>
@@ -1822,6 +1978,14 @@
 <span class="sd">        the focus. Return current focus model if MODEL is None.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;focusmodel&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>
     <span class="n">focusmodel</span> <span class="o">=</span> <span class="n">wm_focusmodel</span>
+    <span class="k">def</span> <span class="nf">wm_forget</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">window</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;The window will be unmapped from the screen and will no longer</span>
+<span class="sd">        be managed by wm. toplevel windows will be treated like frame</span>
+<span class="sd">        windows once they are no longer managed by wm, however, the menu</span>
+<span class="sd">        option configuration will be remembered and the menus will return</span>
+<span class="sd">        once the widget is managed again.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;forget&#39;</span><span class="p">,</span> <span class="n">window</span><span class="p">)</span>
+    <span class="n">forget</span> <span class="o">=</span> <span class="n">wm_forget</span>
     <span class="k">def</span> <span class="nf">wm_frame</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return identifier for decorative frame of this widget if present.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;frame&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
@@ -1875,6 +2039,31 @@
 <span class="sd">        None is given.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconname&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">newName</span><span class="p">)</span>
     <span class="n">iconname</span> <span class="o">=</span> <span class="n">wm_iconname</span>
+    <span class="k">def</span> <span class="nf">wm_iconphoto</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Sets the titlebar icon for this window based on the named photo</span>
+<span class="sd">        images passed through args. If default is True, this is applied to</span>
+<span class="sd">        all future created toplevels as well.</span>
+
+<span class="sd">        The data in the images is taken as a snapshot at the time of</span>
+<span class="sd">        invocation. If the images are later changed, this is not reflected</span>
+<span class="sd">        to the titlebar icons. Multiple images are accepted to allow</span>
+<span class="sd">        different images sizes to be provided. The window manager may scale</span>
+<span class="sd">        provided icons to an appropriate size.</span>
+
+<span class="sd">        On Windows, the images are packed into a Windows icon structure.</span>
+<span class="sd">        This will override an icon specified to wm_iconbitmap, and vice</span>
+<span class="sd">        versa.</span>
+
+<span class="sd">        On X, the images are arranged into the _NET_WM_ICON X property,</span>
+<span class="sd">        which most modern window managers support. An icon specified by</span>
+<span class="sd">        wm_iconbitmap may exist simultaneously.</span>
+
+<span class="sd">        On Macintosh, this currently does nothing.&quot;&quot;&quot;</span>
+        <span class="k">if</span> <span class="n">default</span><span class="p">:</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconphoto&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s2">&quot;-default&quot;</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
+        <span class="k">else</span><span class="p">:</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconphoto&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
+    <span class="n">iconphoto</span> <span class="o">=</span> <span class="n">wm_iconphoto</span>
     <span class="k">def</span> <span class="nf">wm_iconposition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the position of the icon of this widget to X and Y. Return</span>
 <span class="sd">        a tuple of the current values of X and X if None is given.&quot;&quot;&quot;</span>
@@ -1886,6 +2075,12 @@
 <span class="sd">        value if None is given.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconwindow&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">pathName</span><span class="p">)</span>
     <span class="n">iconwindow</span> <span class="o">=</span> <span class="n">wm_iconwindow</span>
+    <span class="k">def</span> <span class="nf">wm_manage</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;The widget specified will become a stand alone top-level window.</span>
+<span class="sd">        The window will be decorated with the window managers title bar,</span>
+<span class="sd">        etc.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;manage&#39;</span><span class="p">,</span> <span class="n">widget</span><span class="p">)</span>
+    <span class="n">manage</span> <span class="o">=</span> <span class="n">wm_manage</span>
     <span class="k">def</span> <span class="nf">wm_maxsize</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set max WIDTH and HEIGHT for this widget. If the window is gridded</span>
 <span class="sd">        the values are given in grid units. Return the current values if None</span>
@@ -1917,7 +2112,7 @@
         <span class="sd">&quot;&quot;&quot;Bind function FUNC to command NAME for this widget.</span>
 <span class="sd">        Return the function bound to NAME if None is given. NAME could be</span>
 <span class="sd">        e.g. &quot;WM_SAVE_YOURSELF&quot; or &quot;WM_DELETE_WINDOW&quot;.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+        <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
             <span class="n">command</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">func</span><span class="p">)</span>
         <span class="k">else</span><span class="p">:</span>
             <span class="n">command</span> <span class="o">=</span> <span class="n">func</span>
@@ -1977,7 +2172,7 @@
             <span class="kn">import</span> <span class="nn">os</span>
             <span class="n">baseName</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
             <span class="n">baseName</span><span class="p">,</span> <span class="n">ext</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">baseName</span><span class="p">)</span>
-            <span class="k">if</span> <span class="n">ext</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;.py&#39;</span><span class="p">,</span> <span class="s1">&#39;.pyc&#39;</span><span class="p">,</span> <span class="s1">&#39;.pyo&#39;</span><span class="p">):</span>
+            <span class="k">if</span> <span class="n">ext</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;.py&#39;</span><span class="p">,</span> <span class="s1">&#39;.pyc&#39;</span><span class="p">):</span>
                 <span class="n">baseName</span> <span class="o">=</span> <span class="n">baseName</span> <span class="o">+</span> <span class="n">ext</span>
         <span class="n">interactive</span> <span class="o">=</span> <span class="mi">0</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">screenName</span><span class="p">,</span> <span class="n">baseName</span><span class="p">,</span> <span class="n">className</span><span class="p">,</span> <span class="n">interactive</span><span class="p">,</span> <span class="n">wantobjects</span><span class="p">,</span> <span class="n">useTk</span><span class="p">,</span> <span class="n">sync</span><span class="p">,</span> <span class="n">use</span><span class="p">)</span>
@@ -1996,19 +2191,13 @@
         <span class="c1"># Version sanity checks</span>
         <span class="n">tk_version</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getvar</span><span class="p">(</span><span class="s1">&#39;tk_version&#39;</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">tk_version</span> <span class="o">!=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> \
-            <span class="s2">&quot;tk.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtk.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span> \
-            <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">,</span> <span class="n">tk_version</span><span class="p">)</span>
+            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s2">&quot;tk.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtk.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span>
+                               <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">,</span> <span class="n">tk_version</span><span class="p">))</span>
         <span class="c1"># Under unknown circumstances, tcl_version gets coerced to float</span>
         <span class="n">tcl_version</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getvar</span><span class="p">(</span><span class="s1">&#39;tcl_version&#39;</span><span class="p">))</span>
         <span class="k">if</span> <span class="n">tcl_version</span> <span class="o">!=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">TCL_VERSION</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> \
-            <span class="s2">&quot;tcl.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtcl.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span> \
-            <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TCL_VERSION</span><span class="p">,</span> <span class="n">tcl_version</span><span class="p">)</span>
-        <span class="k">if</span> <span class="n">TkVersion</span> <span class="o">&lt;</span> <span class="mf">4.0</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> \
-            <span class="s2">&quot;Tk 4.0 or higher is required; found Tk </span><span class="si">%s</span><span class="s2">&quot;</span> \
-            <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="n">TkVersion</span><span class="p">)</span>
+            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s2">&quot;tcl.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtcl.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span> \
+                               <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TCL_VERSION</span><span class="p">,</span> <span class="n">tcl_version</span><span class="p">))</span>
         <span class="c1"># Create and register the tkerror and exit commands</span>
         <span class="c1"># We need to inline parts of _register here, _ register</span>
         <span class="c1"># would register differently-named commands.</span>
@@ -2024,7 +2213,7 @@
     <span class="k">def</span> <span class="nf">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Destroy this and all descendants widgets. This will</span>
 <span class="sd">        end the application of this Tcl interpreter.&quot;&quot;&quot;</span>
-        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">():</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
+        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">()):</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
         <span class="n">Misc</span><span class="o">.</span><span class="n">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
         <span class="k">global</span> <span class="n">_default_root</span>
@@ -2032,8 +2221,8 @@
             <span class="n">_default_root</span> <span class="o">=</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">readprofile</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">baseName</span><span class="p">,</span> <span class="n">className</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function. It reads BASENAME.tcl and CLASSNAME.tcl into</span>
-<span class="sd">        the Tcl Interpreter and calls execfile on BASENAME.py and CLASSNAME.py if</span>
-<span class="sd">        such a file exists in the home directory.&quot;&quot;&quot;</span>
+<span class="sd">        the Tcl Interpreter and calls exec on the contents of BASENAME.py and</span>
+<span class="sd">        CLASSNAME.py if such a file exists in the home directory.&quot;&quot;&quot;</span>
         <span class="kn">import</span> <span class="nn">os</span>
         <span class="k">if</span> <span class="s1">&#39;HOME&#39;</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">:</span> <span class="n">home</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s1">&#39;HOME&#39;</span><span class="p">]</span>
         <span class="k">else</span><span class="p">:</span> <span class="n">home</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">curdir</span>
@@ -2042,22 +2231,22 @@
         <span class="n">base_tcl</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">home</span><span class="p">,</span> <span class="s1">&#39;.</span><span class="si">%s</span><span class="s1">.tcl&#39;</span> <span class="o">%</span> <span class="n">baseName</span><span class="p">)</span>
         <span class="n">base_py</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">home</span><span class="p">,</span> <span class="s1">&#39;.</span><span class="si">%s</span><span class="s1">.py&#39;</span> <span class="o">%</span> <span class="n">baseName</span><span class="p">)</span>
         <span class="nb">dir</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;self&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="p">}</span>
-        <span class="n">exec</span> <span class="s1">&#39;from Tkinter import *&#39;</span> <span class="ow">in</span> <span class="nb">dir</span>
+        <span class="n">exec</span><span class="p">(</span><span class="s1">&#39;from tkinter import *&#39;</span><span class="p">,</span> <span class="nb">dir</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">class_tcl</span><span class="p">):</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;source&#39;</span><span class="p">,</span> <span class="n">class_tcl</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">class_py</span><span class="p">):</span>
-            <span class="n">execfile</span><span class="p">(</span><span class="n">class_py</span><span class="p">,</span> <span class="nb">dir</span><span class="p">)</span>
+            <span class="n">exec</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">class_py</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">(),</span> <span class="nb">dir</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">base_tcl</span><span class="p">):</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;source&#39;</span><span class="p">,</span> <span class="n">base_tcl</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">base_py</span><span class="p">):</span>
-            <span class="n">execfile</span><span class="p">(</span><span class="n">base_py</span><span class="p">,</span> <span class="nb">dir</span><span class="p">)</span>
+            <span class="n">exec</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">base_py</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">(),</span> <span class="nb">dir</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">report_callback_exception</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Report callback exception on sys.stderr.</span>
 
 <span class="sd">        Applications may want to override this internal function, and</span>
 <span class="sd">        should when sys.stderr is None.&quot;&quot;&quot;</span>
-        <span class="kn">import</span> <span class="nn">traceback</span><span class="o">,</span> <span class="nn">sys</span>
-        <span class="nb">print</span> <span class="o">&gt;&gt;</span><span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="p">,</span> <span class="s2">&quot;Exception in Tkinter callback&quot;</span>
+        <span class="kn">import</span> <span class="nn">traceback</span>
+        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Exception in Tkinter callback&quot;</span><span class="p">,</span> <span class="n">file</span><span class="o">=</span><span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="p">)</span>
         <span class="n">sys</span><span class="o">.</span><span class="n">last_type</span> <span class="o">=</span> <span class="n">exc</span>
         <span class="n">sys</span><span class="o">.</span><span class="n">last_value</span> <span class="o">=</span> <span class="n">val</span>
         <span class="n">sys</span><span class="o">.</span><span class="n">last_traceback</span> <span class="o">=</span> <span class="n">tb</span>
@@ -2231,7 +2420,15 @@
             <span class="n">name</span> <span class="o">=</span> <span class="n">cnf</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span>
             <span class="k">del</span> <span class="n">cnf</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">name</span><span class="p">:</span>
-            <span class="n">name</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="nb">id</span><span class="p">(</span><span class="bp">self</span><span class="p">))</span>
+            <span class="n">name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
+            <span class="k">if</span> <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
+                <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span> <span class="o">=</span> <span class="p">{}</span>
+            <span class="n">count</span> <span class="o">=</span> <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
+            <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">count</span>
+            <span class="k">if</span> <span class="n">count</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
+                <span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;!</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="p">,)</span>
+            <span class="k">else</span><span class="p">:</span>
+                <span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;!</span><span class="si">%s%d</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">name</span>
         <span class="k">if</span> <span class="n">master</span><span class="o">.</span><span class="n">_w</span><span class="o">==</span><span class="s1">&#39;.&#39;</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span> <span class="o">=</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="n">name</span>
@@ -2250,18 +2447,16 @@
         <span class="n">BaseWidget</span><span class="o">.</span><span class="n">_setup</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">cnf</span><span class="p">)</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="o">=</span> <span class="p">[]</span>
-        <span class="n">classes</span> <span class="o">=</span> <span class="p">[]</span>
-        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
-            <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="ow">is</span> <span class="n">ClassType</span><span class="p">:</span>
-                <span class="n">classes</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">k</span><span class="p">,</span> <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]))</span>
-                <span class="k">del</span> <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]</span>
+        <span class="n">classes</span> <span class="o">=</span> <span class="p">[(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">items</span><span class="p">()</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="nb">type</span><span class="p">)]</span>
+        <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">classes</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="p">(</span><span class="n">widgetName</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span> <span class="o">+</span> <span class="n">extra</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">))</span>
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">classes</span><span class="p">:</span>
             <span class="n">k</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Destroy this and all descendants widgets.&quot;&quot;&quot;</span>
-        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">():</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
+        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">()):</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">children</span><span class="p">:</span>
             <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">children</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">]</span>
@@ -2328,21 +2523,6 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;button&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
 
-    <span class="k">def</span> <span class="nf">tkButtonEnter</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonEnter&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonLeave</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonLeave&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonDown</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonDown&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonUp</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonUp&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonInvoke</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonInvoke&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
     <span class="k">def</span> <span class="nf">flash</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Flash the button.</span>
 
@@ -2365,25 +2545,6 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;invoke&#39;</span><span class="p">)</span>
 
-<span class="c1"># Indices:</span>
-<span class="c1"># XXX I don&#39;t like these -- take them away</span>
-<span class="k">def</span> <span class="nf">AtEnd</span><span class="p">():</span>
-    <span class="k">return</span> <span class="s1">&#39;end&#39;</span>
-<span class="k">def</span> <span class="nf">AtInsert</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">):</span>
-    <span class="n">s</span> <span class="o">=</span> <span class="s1">&#39;insert&#39;</span>
-    <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">args</span><span class="p">:</span>
-        <span class="k">if</span> <span class="n">a</span><span class="p">:</span> <span class="n">s</span> <span class="o">=</span> <span class="n">s</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39; &#39;</span> <span class="o">+</span> <span class="n">a</span><span class="p">)</span>
-    <span class="k">return</span> <span class="n">s</span>
-<span class="k">def</span> <span class="nf">AtSelFirst</span><span class="p">():</span>
-    <span class="k">return</span> <span class="s1">&#39;sel.first&#39;</span>
-<span class="k">def</span> <span class="nf">AtSelLast</span><span class="p">():</span>
-    <span class="k">return</span> <span class="s1">&#39;sel.last&#39;</span>
-<span class="k">def</span> <span class="nf">At</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
-    <span class="k">if</span> <span class="n">y</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
-        <span class="k">return</span> <span class="s1">&#39;@</span><span class="si">%r</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">x</span><span class="p">,)</span>
-    <span class="k">else</span><span class="p">:</span>
-        <span class="k">return</span> <span class="s1">&#39;@</span><span class="si">%r</span><span class="s1">,</span><span class="si">%r</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
-
 <span class="k">class</span> <span class="nc">Canvas</span><span class="p">(</span><span class="n">Widget</span><span class="p">,</span> <span class="n">XView</span><span class="p">,</span> <span class="n">YView</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Canvas widget to display graphical elements like lines or text.&quot;&quot;&quot;</span>
     <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
@@ -2448,28 +2609,28 @@
     <span class="k">def</span> <span class="nf">canvasx</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">screenx</span><span class="p">,</span> <span class="n">gridspacing</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the canvas x coordinate of pixel position SCREENX rounded</span>
 <span class="sd">        to nearest multiple of GRIDSPACING units.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;canvasx&#39;</span><span class="p">,</span> <span class="n">screenx</span><span class="p">,</span> <span class="n">gridspacing</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">canvasy</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">screeny</span><span class="p">,</span> <span class="n">gridspacing</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the canvas y coordinate of pixel position SCREENY rounded</span>
 <span class="sd">        to nearest multiple of GRIDSPACING units.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;canvasy&#39;</span><span class="p">,</span> <span class="n">screeny</span><span class="p">,</span> <span class="n">gridspacing</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">coords</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of coordinates for the item given in ARGS.&quot;&quot;&quot;</span>
         <span class="c1"># XXX Should use _flatten on args</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="n">getdouble</span><span class="p">,</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
                            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
-                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;coords&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)))</span>
+                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;coords&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))]</span>
     <span class="k">def</span> <span class="nf">_create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">itemType</span><span class="p">,</span> <span class="n">args</span><span class="p">,</span> <span class="n">kw</span><span class="p">):</span> <span class="c1"># Args: (val, val, ..., cnf={})</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="n">args</span> <span class="o">=</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
         <span class="n">cnf</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="ow">in</span> <span class="p">(</span><span class="n">DictionaryType</span><span class="p">,</span> <span class="n">TupleType</span><span class="p">):</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="p">(</span><span class="nb">dict</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">)):</span>
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
         <span class="k">else</span><span class="p">:</span>
             <span class="n">cnf</span> <span class="o">=</span> <span class="p">{}</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">itemType</span><span class="p">,</span>
             <span class="o">*</span><span class="p">(</span><span class="n">args</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">))))</span>
     <span class="k">def</span> <span class="nf">create_arc</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
@@ -2553,7 +2714,7 @@
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;icursor&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return position of cursor as integer in item specified in ARGS.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">insert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Insert TEXT in item TAGORID at position POS. ARGS must</span>
 <span class="sd">        be TAGORID POS TEXT.&quot;&quot;&quot;</span>
@@ -2679,7 +2840,7 @@
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;icursor&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return position of cursor.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">insert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Insert STRING at INDEX.&quot;&quot;&quot;</span>
@@ -2794,13 +2955,13 @@
         <span class="sd">&quot;&quot;&quot;Return index of item identified with INDEX.&quot;&quot;&quot;</span>
         <span class="n">i</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="s1">&#39;none&#39;</span><span class="p">:</span> <span class="k">return</span> <span class="kc">None</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">insert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="o">*</span><span class="n">elements</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Insert ELEMENTS at INDEX.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;insert&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span> <span class="o">+</span> <span class="n">elements</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">nearest</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Get index of item which is nearest to y coordinate Y.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;nearest&#39;</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">scan_mark</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Remember the current X, Y coordinates.&quot;&quot;&quot;</span>
@@ -2834,7 +2995,7 @@
     <span class="n">select_set</span> <span class="o">=</span> <span class="n">selection_set</span>
     <span class="k">def</span> <span class="nf">size</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of elements in the listbox.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">itemcget</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">option</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the resource value for an ITEM and an OPTION.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
@@ -2860,32 +3021,6 @@
 <span class="sd">        disabledforeground, fg, font, foreground, postcommand, relief,</span>
 <span class="sd">        selectcolor, takefocus, tearoff, tearoffcommand, title, type.&quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;menu&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_bindForTraversal</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="c1"># obsolete since Tk 4.0</span>
-        <span class="kn">import</span> <span class="nn">warnings</span>
-        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s1">&#39;tk_bindForTraversal() does nothing and &#39;</span>
-                      <span class="s1">&#39;will be removed in 3.6&#39;</span><span class="p">,</span>
-                      <span class="ne">DeprecationWarning</span><span class="p">,</span> <span class="n">stacklevel</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_mbPost</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_mbPost&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_mbUnpost</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_mbUnpost&#39;</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_traverseToMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">char</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_traverseToMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">char</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_traverseWithinMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">char</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_traverseWithinMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">char</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_getMenuButtons</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_getMenuButtons&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_nextMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">count</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_nextMenu&#39;</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_nextMenuEntry</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">count</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_nextMenuEntry&#39;</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_invokeMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_invokeMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_firstMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_firstMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_mbButtonDown</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_mbButtonDown&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">tk_popup</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">entry</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Post the menu at position X,Y with entry ENTRY.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_popup&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">entry</span><span class="p">)</span>
@@ -2956,7 +3091,7 @@
         <span class="sd">&quot;&quot;&quot;Return the index of a menu item identified by INDEX.&quot;&quot;&quot;</span>
         <span class="n">i</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="s1">&#39;none&#39;</span><span class="p">:</span> <span class="k">return</span> <span class="kc">None</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">invoke</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Invoke a menu item identified by INDEX and execute</span>
 <span class="sd">        the associated command.&quot;&quot;&quot;</span>
@@ -2970,9 +3105,13 @@
     <span class="k">def</span> <span class="nf">unpost</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Unmap a menu.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;unpost&#39;</span><span class="p">)</span>
+    <span class="k">def</span> <span class="nf">xposition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Return the x-position of the leftmost pixel of the menu item</span>
+<span class="sd">        at INDEX.&quot;&quot;&quot;</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;xposition&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">yposition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y-position of the topmost pixel of the menu item at INDEX.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;yposition&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">Menubutton</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
@@ -3028,9 +3167,9 @@
         <span class="sd">&quot;&quot;&quot;Get the current value as integer or float.&quot;&quot;&quot;</span>
         <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;get&#39;</span><span class="p">)</span>
         <span class="k">try</span><span class="p">:</span>
-            <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
-            <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+        <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the value to VALUE.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;set&#39;</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
@@ -3057,19 +3196,23 @@
 <span class="sd">        relief, repeatdelay, repeatinterval, takefocus,</span>
 <span class="sd">        troughcolor, width.&quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;scrollbar&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">activate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Display the element at INDEX with activebackground and activerelief.</span>
-<span class="sd">        INDEX can be &quot;arrow1&quot;,&quot;slider&quot; or &quot;arrow2&quot;.&quot;&quot;&quot;</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;activate&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
+    <span class="k">def</span> <span class="nf">activate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Marks the element indicated by index as active.</span>
+<span class="sd">        The only index values understood by this method are &quot;arrow1&quot;,</span>
+<span class="sd">        &quot;slider&quot;, or &quot;arrow2&quot;.  If any other value is specified then no</span>
+<span class="sd">        element of the scrollbar will be active.  If index is not specified,</span>
+<span class="sd">        the method returns the name of the element that is currently active,</span>
+<span class="sd">        or None if no element is active.&quot;&quot;&quot;</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;activate&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span> <span class="ow">or</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">delta</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">deltax</span><span class="p">,</span> <span class="n">deltay</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the fractional change of the scrollbar setting if it</span>
 <span class="sd">        would be moved by DELTAX or DELTAY pixels.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;delta&#39;</span><span class="p">,</span> <span class="n">deltax</span><span class="p">,</span> <span class="n">deltay</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">fraction</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the fractional value which corresponds to a slider</span>
 <span class="sd">        position of X,Y.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;fraction&#39;</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;fraction&#39;</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">identify</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the element under position X,Y as one of</span>
 <span class="sd">        &quot;arrow1&quot;,&quot;slider&quot;,&quot;arrow2&quot; or &quot;&quot;.&quot;&quot;&quot;</span>
@@ -3078,10 +3221,10 @@
         <span class="sd">&quot;&quot;&quot;Return the current fractional values (upper and lower end)</span>
 <span class="sd">        of the slider position.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getdoubles</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;get&#39;</span><span class="p">))</span>
-    <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
+    <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">first</span><span class="p">,</span> <span class="n">last</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the fractional values of the slider position (upper and</span>
 <span class="sd">        lower ends as value between 0 and 1).&quot;&quot;&quot;</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;set&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;set&#39;</span><span class="p">,</span> <span class="n">first</span><span class="p">,</span> <span class="n">last</span><span class="p">)</span>
 
 
 
@@ -3111,24 +3254,35 @@
 
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">bbox</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
+    <span class="k">def</span> <span class="nf">bbox</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a tuple of (x,y,width,height) which gives the bounding</span>
-<span class="sd">        box of the visible part of the character at the index in ARGS.&quot;&quot;&quot;</span>
+<span class="sd">        box of the visible part of the character at the given index.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getints</span><span class="p">(</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;bbox&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))</span> <span class="ow">or</span> <span class="kc">None</span>
-    <span class="k">def</span> <span class="nf">tk_textSelectTo</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textSelectTo&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_textBackspace</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textBackspace&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_textIndexCloser</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textIndexCloser&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_textResetAnchor</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textResetAnchor&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;bbox&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span> <span class="ow">or</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">compare</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">op</span><span class="p">,</span> <span class="n">index2</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return whether between index INDEX1 and index INDEX2 the</span>
 <span class="sd">        relation OP is satisfied. OP is one of &lt;, &lt;=, ==, &gt;=, &gt;, or !=.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;compare&#39;</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">op</span><span class="p">,</span> <span class="n">index2</span><span class="p">))</span>
+    <span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Counts the number of relevant things between the two indices.</span>
+<span class="sd">        If index1 is after index2, the result will be a negative number</span>
+<span class="sd">        (and this holds for each of the possible options).</span>
+
+<span class="sd">        The actual items which are counted depends on the options given by</span>
+<span class="sd">        args. The result is a list of integers, one for the result of each</span>
+<span class="sd">        counting option given. Valid counting options are &quot;chars&quot;,</span>
+<span class="sd">        &quot;displaychars&quot;, &quot;displayindices&quot;, &quot;displaylines&quot;, &quot;indices&quot;,</span>
+<span class="sd">        &quot;lines&quot;, &quot;xpixels&quot; and &quot;ypixels&quot;. There is an additional possible</span>
+<span class="sd">        option &quot;update&quot;, which if given then all subsequent options ensure</span>
+<span class="sd">        that any possible out of date information is recalculated.&quot;&quot;&quot;</span>
+        <span class="n">args</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;-</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">arg</span> <span class="k">for</span> <span class="n">arg</span> <span class="ow">in</span> <span class="n">args</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">arg</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">)]</span>
+        <span class="n">args</span> <span class="o">+=</span> <span class="p">[</span><span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">]</span>
+        <span class="n">res</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span> <span class="ow">or</span> <span class="kc">None</span>
+        <span class="k">if</span> <span class="n">res</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="p">:</span>
+            <span class="k">return</span> <span class="p">(</span><span class="n">res</span><span class="p">,</span> <span class="p">)</span>
+        <span class="k">else</span><span class="p">:</span>
+            <span class="k">return</span> <span class="n">res</span>
     <span class="k">def</span> <span class="nf">debug</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">boolean</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Turn on the internal consistency checks of the B-Tree inside the text</span>
 <span class="sd">        widget according to BOOLEAN.&quot;&quot;&quot;</span>
@@ -3292,6 +3446,24 @@
     <span class="k">def</span> <span class="nf">mark_previous</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the name of the previous mark before INDEX.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;mark&#39;</span><span class="p">,</span> <span class="s1">&#39;previous&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span> <span class="ow">or</span> <span class="kc">None</span>
+    <span class="k">def</span> <span class="nf">peer_create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">newPathName</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Creates a peer text widget with the given newPathName, and any</span>
+<span class="sd">        optional standard configuration options. By default the peer will</span>
+<span class="sd">        have the same start and end line as the parent widget, but</span>
+<span class="sd">        these can be overridden with the standard configuration options.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;peer&#39;</span><span class="p">,</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">newPathName</span><span class="p">,</span>
+            <span class="o">*</span><span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">))</span>
+    <span class="k">def</span> <span class="nf">peer_names</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Returns a list of peers of this widget (this does not include</span>
+<span class="sd">        the widget itself).&quot;&quot;&quot;</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;peer&#39;</span><span class="p">,</span> <span class="s1">&#39;names&#39;</span><span class="p">))</span>
+    <span class="k">def</span> <span class="nf">replace</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="n">chars</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Replaces the range of characters between index1 and index2 with</span>
+<span class="sd">        the given characters and tags specified by args.</span>
+
+<span class="sd">        See the method insert for some more information about args, and the</span>
+<span class="sd">        method delete for information about the indices.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;replace&#39;</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="n">chars</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">scan_mark</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Remember the current X, Y coordinates.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;scan&#39;</span><span class="p">,</span> <span class="s1">&#39;mark&#39;</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
@@ -3443,7 +3615,7 @@
         <span class="k">if</span> <span class="s1">&#39;command&#39;</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
             <span class="k">del</span> <span class="n">kwargs</span><span class="p">[</span><span class="s1">&#39;command&#39;</span><span class="p">]</span>
         <span class="k">if</span> <span class="n">kwargs</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="n">TclError</span><span class="p">,</span> <span class="s1">&#39;unknown option -&#39;</span><span class="o">+</span><span class="n">kwargs</span><span class="o">.</span><span class="n">keys</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
+            <span class="k">raise</span> <span class="n">TclError</span><span class="p">(</span><span class="s1">&#39;unknown option -&#39;</span><span class="o">+</span><span class="n">kwargs</span><span class="o">.</span><span class="n">keys</span><span class="p">()[</span><span class="mi">0</span><span class="p">])</span>
         <span class="n">menu</span><span class="o">.</span><span class="n">add_command</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="n">value</span><span class="p">,</span>
                  <span class="n">command</span><span class="o">=</span><span class="n">_setit</span><span class="p">(</span><span class="n">variable</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">callback</span><span class="p">))</span>
         <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">values</span><span class="p">:</span>
@@ -3469,22 +3641,17 @@
         <span class="k">if</span> <span class="ow">not</span> <span class="n">master</span><span class="p">:</span>
             <span class="n">master</span> <span class="o">=</span> <span class="n">_default_root</span>
             <span class="k">if</span> <span class="ow">not</span> <span class="n">master</span><span class="p">:</span>
-                <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> <span class="s1">&#39;Too early to create image&#39;</span>
+                <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s1">&#39;Too early to create image&#39;</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">master</span><span class="p">,</span> <span class="s1">&#39;tk&#39;</span><span class="p">,</span> <span class="n">master</span><span class="p">)</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">name</span><span class="p">:</span>
             <span class="n">Image</span><span class="o">.</span><span class="n">_last_id</span> <span class="o">+=</span> <span class="mi">1</span>
             <span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;pyimage</span><span class="si">%r</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">Image</span><span class="o">.</span><span class="n">_last_id</span><span class="p">,)</span> <span class="c1"># tk itself would use image&lt;x&gt;</span>
-            <span class="c1"># The following is needed for systems where id(x)</span>
-            <span class="c1"># can return a negative number, such as Linux/m68k:</span>
-            <span class="k">if</span> <span class="n">name</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;-&#39;</span><span class="p">:</span> <span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;_&#39;</span> <span class="o">+</span> <span class="n">name</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
         <span class="k">if</span> <span class="n">kw</span> <span class="ow">and</span> <span class="n">cnf</span><span class="p">:</span> <span class="n">cnf</span> <span class="o">=</span> <span class="n">_cnfmerge</span><span class="p">((</span><span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">))</span>
         <span class="k">elif</span> <span class="n">kw</span><span class="p">:</span> <span class="n">cnf</span> <span class="o">=</span> <span class="n">kw</span>
         <span class="n">options</span> <span class="o">=</span> <span class="p">()</span>
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
-            <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+            <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">v</span><span class="p">):</span>
                 <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
-            <span class="k">elif</span> <span class="n">k</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;maskdata&#39;</span><span class="p">):</span>
-                <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">_createbytearray</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
             <span class="n">options</span> <span class="o">=</span> <span class="n">options</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">imgtype</span><span class="p">,</span> <span class="n">name</span><span class="p">,)</span> <span class="o">+</span> <span class="n">options</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
@@ -3506,23 +3673,21 @@
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">_cnfmerge</span><span class="p">(</span><span class="n">kw</span><span class="p">)</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
             <span class="k">if</span> <span class="n">v</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
                 <span class="k">if</span> <span class="n">k</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;_&#39;</span><span class="p">:</span> <span class="n">k</span> <span class="o">=</span> <span class="n">k</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
-                <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+                <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">v</span><span class="p">):</span>
                     <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
-                <span class="k">elif</span> <span class="n">k</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;maskdata&#39;</span><span class="p">):</span>
-                    <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">_createbytearray</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
                 <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">&#39;config&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">res</span><span class="p">)</span>
     <span class="n">config</span> <span class="o">=</span> <span class="n">configure</span>
     <span class="k">def</span> <span class="nf">height</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the height of the image.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">type</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the type of the image, e.g. &quot;photo&quot; or &quot;bitmap&quot;.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">width</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the width of the image.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">PhotoImage</span><span class="p">(</span><span class="n">Image</span><span class="p">):</span>
@@ -3961,7 +4126,7 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">cnf</span> <span class="ow">is</span> <span class="kc">None</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;paneconfigure&#39;</span><span class="p">,</span> <span class="n">tagOrId</span><span class="p">)</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="o">==</span> <span class="n">StringType</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure1</span><span class="p">(</span>
                 <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;paneconfigure&#39;</span><span class="p">,</span> <span class="n">tagOrId</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">cnf</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;paneconfigure&#39;</span><span class="p">,</span> <span class="n">tagOrId</span><span class="p">)</span> <span class="o">+</span>
@@ -3972,39 +4137,12 @@
         <span class="sd">&quot;&quot;&quot;Returns an ordered list of the child panes.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;panes&#39;</span><span class="p">))</span>
 
-<span class="c1">######################################################################</span>
-<span class="c1"># Extensions:</span>
-
-<span class="k">class</span> <span class="nc">Studbutton</span><span class="p">(</span><span class="n">Button</span><span class="p">):</span>
-    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
-        <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;studbutton&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Enter&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonEnter</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Leave&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonLeave</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;1&gt;&#39;</span><span class="p">,</span>               <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonDown</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;ButtonRelease-1&gt;&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonUp</span><span class="p">)</span>
-
-<span class="k">class</span> <span class="nc">Tributton</span><span class="p">(</span><span class="n">Button</span><span class="p">):</span>
-    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
-        <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;tributton&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Enter&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonEnter</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Leave&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonLeave</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;1&gt;&#39;</span><span class="p">,</span>               <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonDown</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;ButtonRelease-1&gt;&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonUp</span><span class="p">)</span>
-        <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;fg&#39;</span><span class="p">]</span>               <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;bg&#39;</span><span class="p">]</span>
-        <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;activebackground&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;bg&#39;</span><span class="p">]</span>
-
-<span class="c1">######################################################################</span>
 <span class="c1"># Test:</span>
 
 <span class="k">def</span> <span class="nf">_test</span><span class="p">():</span>
     <span class="n">root</span> <span class="o">=</span> <span class="n">Tk</span><span class="p">()</span>
     <span class="n">text</span> <span class="o">=</span> <span class="s2">&quot;This is Tcl/Tk version </span><span class="si">%s</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">TclVersion</span>
-    <span class="k">if</span> <span class="n">TclVersion</span> <span class="o">&gt;=</span> <span class="mf">8.1</span><span class="p">:</span>
-        <span class="k">try</span><span class="p">:</span>
-            <span class="n">text</span> <span class="o">=</span> <span class="n">text</span> <span class="o">+</span> <span class="n">unicode</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">This should be a cedilla: </span><span class="se">\347</span><span class="s2">&quot;</span><span class="p">,</span>
-                                  <span class="s2">&quot;iso-8859-1&quot;</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">NameError</span><span class="p">:</span>
-            <span class="k">pass</span> <span class="c1"># no unicode support</span>
+    <span class="n">text</span> <span class="o">+=</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">This should be a cedilla: </span><span class="se">\xe7</span><span class="s2">&quot;</span>
     <span class="n">label</span> <span class="o">=</span> <span class="n">Label</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">)</span>
     <span class="n">label</span><span class="o">.</span><span class="n">pack</span><span class="p">()</span>
     <span class="n">test</span> <span class="o">=</span> <span class="n">Button</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s2">&quot;Click me!&quot;</span><span class="p">,</span>
Index: docs/build/_modules/Tkinter.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docs/build/_modules/Tkinter.html	(revision 78c305a9bc1a874c86424646d6a9b53c5ab14f5c)
+++ docs/build/_modules/Tkinter.html	(date 1586289706379)
@@ -8,7 +8,7 @@
   
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   
-  <title>Tkinter &mdash; ReachMaster alpha documentation</title>
+  <title>tkinter &mdash; ReachMaster alpha documentation</title>
   
 
   
@@ -21,9 +21,10 @@
   
     
       <script type="text/javascript" id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
-        <script type="text/javascript" src="../_static/jquery.js"></script>
-        <script type="text/javascript" src="../_static/underscore.js"></script>
-        <script type="text/javascript" src="../_static/doctools.js"></script>
+        <script src="../_static/jquery.js"></script>
+        <script src="../_static/underscore.js"></script>
+        <script src="../_static/doctools.js"></script>
+        <script src="../_static/language_data.js"></script>
     
     <script type="text/javascript" src="../_static/js/theme.js"></script>
 
@@ -89,7 +90,6 @@
 <li class="toctree-l1"><a class="reference internal" href="../overview.html">Overview</a></li>
 <li class="toctree-l1"><a class="reference internal" href="../hardware/hardware.html">Hardware</a></li>
 <li class="toctree-l1"><a class="reference internal" href="../software/software.html">Software</a></li>
-<li class="toctree-l1"><a class="reference internal" href="../tutorials/tutorials.html">Tutorials</a></li>
 </ul>
 
             
@@ -137,7 +137,7 @@
         
           <li><a href="index.html">Module code</a> &raquo;</li>
         
-      <li>Tkinter</li>
+      <li>tkinter</li>
     
     
       <li class="wy-breadcrumbs-aside">
@@ -152,7 +152,7 @@
           <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
            <div itemprop="articleBody">
             
-  <h1>Source code for Tkinter</h1><div class="highlight"><pre>
+  <h1>Source code for tkinter</h1><div class="highlight"><pre>
 <span></span><span class="sd">&quot;&quot;&quot;Wrapper functions for Tcl/Tk.</span>
 
 <span class="sd">Tkinter provides classes which allow the display, positioning and</span>
@@ -173,31 +173,27 @@
 <span class="sd">command) or with the method bind.</span>
 
 <span class="sd">Example (Hello, World):</span>
-<span class="sd">import Tkinter</span>
-<span class="sd">from Tkconstants import *</span>
-<span class="sd">tk = Tkinter.Tk()</span>
-<span class="sd">frame = Tkinter.Frame(tk, relief=RIDGE, borderwidth=2)</span>
+<span class="sd">import tkinter</span>
+<span class="sd">from tkinter.constants import *</span>
+<span class="sd">tk = tkinter.Tk()</span>
+<span class="sd">frame = tkinter.Frame(tk, relief=RIDGE, borderwidth=2)</span>
 <span class="sd">frame.pack(fill=BOTH,expand=1)</span>
-<span class="sd">label = Tkinter.Label(frame, text=&quot;Hello, World&quot;)</span>
+<span class="sd">label = tkinter.Label(frame, text=&quot;Hello, World&quot;)</span>
 <span class="sd">label.pack(fill=X, expand=1)</span>
-<span class="sd">button = Tkinter.Button(frame,text=&quot;Exit&quot;,command=tk.destroy)</span>
+<span class="sd">button = tkinter.Button(frame,text=&quot;Exit&quot;,command=tk.destroy)</span>
 <span class="sd">button.pack(side=BOTTOM)</span>
 <span class="sd">tk.mainloop()</span>
 <span class="sd">&quot;&quot;&quot;</span>
 
-<span class="n">__version__</span> <span class="o">=</span> <span class="s2">&quot;$Revision: 81008 $&quot;</span>
-
+<span class="kn">import</span> <span class="nn">enum</span>
 <span class="kn">import</span> <span class="nn">sys</span>
-<span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">platform</span> <span class="o">==</span> <span class="s2">&quot;win32&quot;</span><span class="p">:</span>
-    <span class="c1"># Attempt to configure Tcl/Tk without requiring PATH</span>
-    <span class="kn">import</span> <span class="nn">FixTk</span>
+
 <span class="kn">import</span> <span class="nn">_tkinter</span> <span class="c1"># If this fails your Python may not be configured for Tk</span>
-<span class="n">tkinter</span> <span class="o">=</span> <span class="n">_tkinter</span> <span class="c1"># b/w compat for export</span>
 <span class="n">TclError</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">TclError</span>
-<span class="kn">from</span> <span class="nn">types</span> <span class="k">import</span> <span class="o">*</span>
-<span class="kn">from</span> <span class="nn">Tkconstants</span> <span class="k">import</span> <span class="o">*</span>
+<span class="kn">from</span> <span class="nn">tkinter.constants</span> <span class="kn">import</span> <span class="o">*</span>
 <span class="kn">import</span> <span class="nn">re</span>
 
+
 <span class="n">wantobjects</span> <span class="o">=</span> <span class="mi">1</span>
 
 <span class="n">TkVersion</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">)</span>
@@ -207,15 +203,9 @@
 <span class="n">WRITABLE</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">WRITABLE</span>
 <span class="n">EXCEPTION</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">EXCEPTION</span>
 
-<span class="c1"># These are not always defined, e.g. not on Win32 with Tk 8.0 :-(</span>
-<span class="k">try</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">createfilehandler</span>
-<span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">createfilehandler</span> <span class="o">=</span> <span class="kc">None</span>
-<span class="k">try</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">deletefilehandler</span>
-<span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">deletefilehandler</span> <span class="o">=</span> <span class="kc">None</span>
-
 
 <span class="n">_magic_re</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;([</span><span class="se">\\</span><span class="si">{}</span><span class="s1">])&#39;</span><span class="p">)</span>
-<span class="n">_space_re</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;([\s])&#39;</span><span class="p">)</span>
+<span class="n">_space_re</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;([\s])&#39;</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">ASCII</span><span class="p">)</span>
 
 <span class="k">def</span> <span class="nf">_join</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
@@ -226,30 +216,30 @@
     <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="p">(</span><span class="nb">list</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">)):</span>
         <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
             <span class="n">value</span> <span class="o">=</span> <span class="n">_stringify</span><span class="p">(</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
-            <span class="k">if</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;{&#39;</span><span class="p">:</span>
+            <span class="k">if</span> <span class="n">_magic_re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
                 <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;{</span><span class="si">%s</span><span class="s1">}&#39;</span> <span class="o">%</span> <span class="n">value</span>
         <span class="k">else</span><span class="p">:</span>
             <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;{</span><span class="si">%s</span><span class="s1">}&#39;</span> <span class="o">%</span> <span class="n">_join</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
     <span class="k">else</span><span class="p">:</span>
-        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
-            <span class="n">value</span> <span class="o">=</span> <span class="n">unicode</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
-        <span class="k">elif</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">unicode</span><span class="p">):</span>
-            <span class="n">value</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+        <span class="n">value</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">value</span><span class="p">:</span>
             <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span>
         <span class="k">elif</span> <span class="n">_magic_re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
             <span class="c1"># add &#39;\&#39; before special characters and spaces</span>
             <span class="n">value</span> <span class="o">=</span> <span class="n">_magic_re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">\1&#39;</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
+            <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">,</span> <span class="sa">r</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span>
             <span class="n">value</span> <span class="o">=</span> <span class="n">_space_re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">\1&#39;</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
+            <span class="k">if</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;&quot;&#39;</span><span class="p">:</span>
+                <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="se">\\</span><span class="s1">&#39;</span> <span class="o">+</span> <span class="n">value</span>
         <span class="k">elif</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;&quot;&#39;</span> <span class="ow">or</span> <span class="n">_space_re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
             <span class="n">value</span> <span class="o">=</span> <span class="s1">&#39;{</span><span class="si">%s</span><span class="s1">}&#39;</span> <span class="o">%</span> <span class="n">value</span>
     <span class="k">return</span> <span class="n">value</span>
 
-<span class="k">def</span> <span class="nf">_flatten</span><span class="p">(</span><span class="nb">tuple</span><span class="p">):</span>
+<span class="k">def</span> <span class="nf">_flatten</span><span class="p">(</span><span class="n">seq</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
     <span class="n">res</span> <span class="o">=</span> <span class="p">()</span>
-    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="nb">tuple</span><span class="p">:</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="ow">in</span> <span class="p">(</span><span class="n">TupleType</span><span class="p">,</span> <span class="n">ListType</span><span class="p">):</span>
+    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">seq</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="p">(</span><span class="nb">tuple</span><span class="p">,</span> <span class="nb">list</span><span class="p">)):</span>
             <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
         <span class="k">elif</span> <span class="n">item</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
             <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="p">(</span><span class="n">item</span><span class="p">,)</span>
@@ -260,17 +250,17 @@
 
 <span class="k">def</span> <span class="nf">_cnfmerge</span><span class="p">(</span><span class="n">cnfs</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-    <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnfs</span><span class="p">)</span> <span class="ow">is</span> <span class="n">DictionaryType</span><span class="p">:</span>
+    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnfs</span><span class="p">,</span> <span class="nb">dict</span><span class="p">):</span>
         <span class="k">return</span> <span class="n">cnfs</span>
-    <span class="k">elif</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnfs</span><span class="p">)</span> <span class="ow">in</span> <span class="p">(</span><span class="n">NoneType</span><span class="p">,</span> <span class="n">StringType</span><span class="p">):</span>
+    <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnfs</span><span class="p">,</span> <span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="kc">None</span><span class="p">),</span> <span class="nb">str</span><span class="p">)):</span>
         <span class="k">return</span> <span class="n">cnfs</span>
     <span class="k">else</span><span class="p">:</span>
         <span class="n">cnf</span> <span class="o">=</span> <span class="p">{}</span>
         <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">cnfs</span><span class="p">):</span>
             <span class="k">try</span><span class="p">:</span>
                 <span class="n">cnf</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
-            <span class="k">except</span> <span class="p">(</span><span class="ne">AttributeError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">),</span> <span class="n">msg</span><span class="p">:</span>
-                <span class="nb">print</span> <span class="s2">&quot;_cnfmerge: fallback due to:&quot;</span><span class="p">,</span> <span class="n">msg</span>
+            <span class="k">except</span> <span class="p">(</span><span class="ne">AttributeError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">)</span> <span class="k">as</span> <span class="n">msg</span><span class="p">:</span>
+                <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;_cnfmerge: fallback due to:&quot;</span><span class="p">,</span> <span class="n">msg</span><span class="p">)</span>
                 <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">c</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
                     <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
         <span class="k">return</span> <span class="n">cnf</span>
@@ -301,6 +291,50 @@
         <span class="nb">dict</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
     <span class="k">return</span> <span class="nb">dict</span>
 
+
+<span class="k">class</span> <span class="nc">EventType</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">enum</span><span class="o">.</span><span class="n">Enum</span><span class="p">):</span>
+    <span class="n">KeyPress</span> <span class="o">=</span> <span class="s1">&#39;2&#39;</span>
+    <span class="n">Key</span> <span class="o">=</span> <span class="n">KeyPress</span><span class="p">,</span>
+    <span class="n">KeyRelease</span> <span class="o">=</span> <span class="s1">&#39;3&#39;</span>
+    <span class="n">ButtonPress</span> <span class="o">=</span> <span class="s1">&#39;4&#39;</span>
+    <span class="n">Button</span> <span class="o">=</span> <span class="n">ButtonPress</span><span class="p">,</span>
+    <span class="n">ButtonRelease</span> <span class="o">=</span> <span class="s1">&#39;5&#39;</span>
+    <span class="n">Motion</span> <span class="o">=</span> <span class="s1">&#39;6&#39;</span>
+    <span class="n">Enter</span> <span class="o">=</span> <span class="s1">&#39;7&#39;</span>
+    <span class="n">Leave</span> <span class="o">=</span> <span class="s1">&#39;8&#39;</span>
+    <span class="n">FocusIn</span> <span class="o">=</span> <span class="s1">&#39;9&#39;</span>
+    <span class="n">FocusOut</span> <span class="o">=</span> <span class="s1">&#39;10&#39;</span>
+    <span class="n">Keymap</span> <span class="o">=</span> <span class="s1">&#39;11&#39;</span>           <span class="c1"># undocumented</span>
+    <span class="n">Expose</span> <span class="o">=</span> <span class="s1">&#39;12&#39;</span>
+    <span class="n">GraphicsExpose</span> <span class="o">=</span> <span class="s1">&#39;13&#39;</span>   <span class="c1"># undocumented</span>
+    <span class="n">NoExpose</span> <span class="o">=</span> <span class="s1">&#39;14&#39;</span>         <span class="c1"># undocumented</span>
+    <span class="n">Visibility</span> <span class="o">=</span> <span class="s1">&#39;15&#39;</span>
+    <span class="n">Create</span> <span class="o">=</span> <span class="s1">&#39;16&#39;</span>
+    <span class="n">Destroy</span> <span class="o">=</span> <span class="s1">&#39;17&#39;</span>
+    <span class="n">Unmap</span> <span class="o">=</span> <span class="s1">&#39;18&#39;</span>
+    <span class="n">Map</span> <span class="o">=</span> <span class="s1">&#39;19&#39;</span>
+    <span class="n">MapRequest</span> <span class="o">=</span> <span class="s1">&#39;20&#39;</span>
+    <span class="n">Reparent</span> <span class="o">=</span> <span class="s1">&#39;21&#39;</span>
+    <span class="n">Configure</span> <span class="o">=</span> <span class="s1">&#39;22&#39;</span>
+    <span class="n">ConfigureRequest</span> <span class="o">=</span> <span class="s1">&#39;23&#39;</span>
+    <span class="n">Gravity</span> <span class="o">=</span> <span class="s1">&#39;24&#39;</span>
+    <span class="n">ResizeRequest</span> <span class="o">=</span> <span class="s1">&#39;25&#39;</span>
+    <span class="n">Circulate</span> <span class="o">=</span> <span class="s1">&#39;26&#39;</span>
+    <span class="n">CirculateRequest</span> <span class="o">=</span> <span class="s1">&#39;27&#39;</span>
+    <span class="n">Property</span> <span class="o">=</span> <span class="s1">&#39;28&#39;</span>
+    <span class="n">SelectionClear</span> <span class="o">=</span> <span class="s1">&#39;29&#39;</span>   <span class="c1"># undocumented</span>
+    <span class="n">SelectionRequest</span> <span class="o">=</span> <span class="s1">&#39;30&#39;</span> <span class="c1"># undocumented</span>
+    <span class="n">Selection</span> <span class="o">=</span> <span class="s1">&#39;31&#39;</span>        <span class="c1"># undocumented</span>
+    <span class="n">Colormap</span> <span class="o">=</span> <span class="s1">&#39;32&#39;</span>
+    <span class="n">ClientMessage</span> <span class="o">=</span> <span class="s1">&#39;33&#39;</span>    <span class="c1"># undocumented</span>
+    <span class="n">Mapping</span> <span class="o">=</span> <span class="s1">&#39;34&#39;</span>          <span class="c1"># undocumented</span>
+    <span class="n">VirtualEvent</span> <span class="o">=</span> <span class="s1">&#39;35&#39;</span><span class="p">,</span>    <span class="c1"># undocumented</span>
+    <span class="n">Activate</span> <span class="o">=</span> <span class="s1">&#39;36&#39;</span><span class="p">,</span>
+    <span class="n">Deactivate</span> <span class="o">=</span> <span class="s1">&#39;37&#39;</span><span class="p">,</span>
+    <span class="n">MouseWheel</span> <span class="o">=</span> <span class="s1">&#39;38&#39;</span><span class="p">,</span>
+    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span>
+
 <span class="k">class</span> <span class="nc">Event</span><span class="p">:</span>
     <span class="sd">&quot;&quot;&quot;Container for the properties of an event.</span>
 
@@ -343,7 +377,43 @@
 <span class="sd">    widget - widget in which the event occurred</span>
 <span class="sd">    delta - delta of wheel movement (MouseWheel)</span>
 <span class="sd">    &quot;&quot;&quot;</span>
-    <span class="k">pass</span>
+    <span class="k">def</span> <span class="fm">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="n">attrs</span> <span class="o">=</span> <span class="p">{</span><span class="n">k</span><span class="p">:</span> <span class="n">v</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="vm">__dict__</span><span class="o">.</span><span class="n">items</span><span class="p">()</span> <span class="k">if</span> <span class="n">v</span> <span class="o">!=</span> <span class="s1">&#39;??&#39;</span><span class="p">}</span>
+        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">char</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;char&#39;</span><span class="p">]</span>
+        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">char</span> <span class="o">!=</span> <span class="s1">&#39;??&#39;</span><span class="p">:</span>
+            <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;char&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">char</span><span class="p">)</span>
+        <span class="k">if</span> <span class="ow">not</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">&#39;send_event&#39;</span><span class="p">,</span> <span class="kc">True</span><span class="p">):</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;send_event&#39;</span><span class="p">]</span>
+        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;state&#39;</span><span class="p">]</span>
+        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">state</span><span class="p">,</span> <span class="nb">int</span><span class="p">):</span>
+            <span class="n">state</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span>
+            <span class="n">mods</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;Shift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lock&#39;</span><span class="p">,</span> <span class="s1">&#39;Control&#39;</span><span class="p">,</span>
+                    <span class="s1">&#39;Mod1&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod2&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod3&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod4&#39;</span><span class="p">,</span> <span class="s1">&#39;Mod5&#39;</span><span class="p">,</span>
+                    <span class="s1">&#39;Button1&#39;</span><span class="p">,</span> <span class="s1">&#39;Button2&#39;</span><span class="p">,</span> <span class="s1">&#39;Button3&#39;</span><span class="p">,</span> <span class="s1">&#39;Button4&#39;</span><span class="p">,</span> <span class="s1">&#39;Button5&#39;</span><span class="p">)</span>
+            <span class="n">s</span> <span class="o">=</span> <span class="p">[]</span>
+            <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">mods</span><span class="p">):</span>
+                <span class="k">if</span> <span class="n">state</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="p">):</span>
+                    <span class="n">s</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
+            <span class="n">state</span> <span class="o">=</span> <span class="n">state</span> <span class="o">&amp;</span> <span class="o">~</span><span class="p">((</span><span class="mi">1</span><span class="o">&lt;&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">mods</span><span class="p">))</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
+            <span class="k">if</span> <span class="n">state</span> <span class="ow">or</span> <span class="ow">not</span> <span class="n">s</span><span class="p">:</span>
+                <span class="n">s</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">hex</span><span class="p">(</span><span class="n">state</span><span class="p">))</span>
+            <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;state&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">delta</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">attrs</span><span class="p">[</span><span class="s1">&#39;delta&#39;</span><span class="p">]</span>
+        <span class="c1"># widget usually is known</span>
+        <span class="c1"># serial and time are not very interesting</span>
+        <span class="c1"># keysym_num duplicates keysym</span>
+        <span class="c1"># x_root and y_root mostly duplicate x and y</span>
+        <span class="n">keys</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;send_event&#39;</span><span class="p">,</span>
+                <span class="s1">&#39;state&#39;</span><span class="p">,</span> <span class="s1">&#39;keysym&#39;</span><span class="p">,</span> <span class="s1">&#39;keycode&#39;</span><span class="p">,</span> <span class="s1">&#39;char&#39;</span><span class="p">,</span>
+                <span class="s1">&#39;num&#39;</span><span class="p">,</span> <span class="s1">&#39;delta&#39;</span><span class="p">,</span> <span class="s1">&#39;focus&#39;</span><span class="p">,</span>
+                <span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="s1">&#39;y&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span><span class="p">)</span>
+        <span class="k">return</span> <span class="s1">&#39;&lt;</span><span class="si">%s</span><span class="s1"> event</span><span class="si">%s</span><span class="s1">&gt;&#39;</span> <span class="o">%</span> <span class="p">(</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">type</span><span class="p">,</span>
+            <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; </span><span class="si">%s</span><span class="s1">=</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">attrs</span><span class="p">[</span><span class="n">k</span><span class="p">])</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">keys</span> <span class="k">if</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">attrs</span><span class="p">)</span>
+        <span class="p">)</span>
 
 <span class="n">_support_default_root</span> <span class="o">=</span> <span class="mi">1</span>
 <span class="n">_default_root</span> <span class="o">=</span> <span class="kc">None</span>
@@ -370,7 +440,7 @@
         <span class="n">code</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
     <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
         <span class="k">pass</span>
-    <span class="k">raise</span> <span class="ne">SystemExit</span><span class="p">,</span> <span class="n">code</span>
+    <span class="k">raise</span> <span class="ne">SystemExit</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
 
 <span class="n">_varnum</span> <span class="o">=</span> <span class="mi">0</span>
 <span class="k">class</span> <span class="nc">Variable</span><span class="p">:</span>
@@ -379,8 +449,9 @@
 <span class="sd">    Subclasses StringVar, IntVar, DoubleVar, BooleanVar are specializations</span>
 <span class="sd">    that constrain the type of the value returned from get().&quot;&quot;&quot;</span>
     <span class="n">_default</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
+    <span class="n">_tk</span> <span class="o">=</span> <span class="kc">None</span>
     <span class="n">_tclCommands</span> <span class="o">=</span> <span class="kc">None</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a variable</span>
 
 <span class="sd">        MASTER can be given as master widget.</span>
@@ -390,6 +461,11 @@
 <span class="sd">        If NAME matches an existing variable and VALUE is omitted</span>
 <span class="sd">        then the existing value is retained.</span>
 <span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># check for type of NAME parameter to override weird error message</span>
+        <span class="c1"># raised from Modules/_tkinter.c:SetVar like:</span>
+        <span class="c1"># TypeError: setvar() takes exactly 3 arguments (2 given)</span>
+        <span class="k">if</span> <span class="n">name</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span> <span class="ow">and</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
+            <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s2">&quot;name must be a string&quot;</span><span class="p">)</span>
         <span class="k">global</span> <span class="n">_varnum</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">master</span><span class="p">:</span>
             <span class="n">master</span> <span class="o">=</span> <span class="n">_default_root</span>
@@ -401,10 +477,10 @@
             <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="s1">&#39;PY_VAR&#39;</span> <span class="o">+</span> <span class="nb">repr</span><span class="p">(</span><span class="n">_varnum</span><span class="p">)</span>
             <span class="n">_varnum</span> <span class="o">+=</span> <span class="mi">1</span>
         <span class="k">if</span> <span class="n">value</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">initialize</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
         <span class="k">elif</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;info&quot;</span><span class="p">,</span> <span class="s2">&quot;exists&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)):</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_default</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">__del__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">initialize</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_default</span><span class="p">)</span>
+    <span class="k">def</span> <span class="fm">__del__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Unset the variable in Tcl.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
             <span class="k">return</span>
@@ -415,28 +491,22 @@
                 <span class="c1">#print &#39;- Tkinter: deleted command&#39;, name</span>
                 <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">deletecommand</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="o">=</span> <span class="kc">None</span>
-    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the name of the variable in Tcl.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span>
     <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the variable to VALUE.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalsetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
+    <span class="n">initialize</span> <span class="o">=</span> <span class="nb">set</span>
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return value of variable.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">trace_variable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Define a trace callback for the variable.</span>
 
-<span class="sd">        MODE is one of &quot;r&quot;, &quot;w&quot;, &quot;u&quot; for read, write, undefine.</span>
-<span class="sd">        CALLBACK must be a function which is called when</span>
-<span class="sd">        the variable is read, written or undefined.</span>
-
-<span class="sd">        Return the name of the callback.</span>
-<span class="sd">        &quot;&quot;&quot;</span>
+    <span class="k">def</span> <span class="nf">_register</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
         <span class="n">f</span> <span class="o">=</span> <span class="n">CallWrapper</span><span class="p">(</span><span class="n">callback</span><span class="p">,</span> <span class="kc">None</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_root</span><span class="p">)</span><span class="o">.</span><span class="fm">__call__</span>
         <span class="n">cbname</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="nb">id</span><span class="p">(</span><span class="n">f</span><span class="p">))</span>
         <span class="k">try</span><span class="p">:</span>
-            <span class="n">callback</span> <span class="o">=</span> <span class="n">callback</span><span class="o">.</span><span class="n">im_func</span>
+            <span class="n">callback</span> <span class="o">=</span> <span class="n">callback</span><span class="o">.</span><span class="vm">__func__</span>
         <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
             <span class="k">pass</span>
         <span class="k">try</span><span class="p">:</span>
@@ -447,18 +517,80 @@
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="o">=</span> <span class="p">[]</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
+        <span class="k">return</span> <span class="n">cbname</span>
+
+    <span class="k">def</span> <span class="nf">trace_add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Define a trace callback for the variable.</span>
+
+<span class="sd">        Mode is one of &quot;read&quot;, &quot;write&quot;, &quot;unset&quot;, or a list or tuple of</span>
+<span class="sd">        such strings.</span>
+<span class="sd">        Callback must be a function which is called when the variable is</span>
+<span class="sd">        read, written or unset.</span>
+
+<span class="sd">        Return the name of the callback.</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="n">cbname</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">callback</span><span class="p">)</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;trace&#39;</span><span class="p">,</span> <span class="s1">&#39;add&#39;</span><span class="p">,</span> <span class="s1">&#39;variable&#39;</span><span class="p">,</span>
+                      <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="p">(</span><span class="n">cbname</span><span class="p">,))</span>
+        <span class="k">return</span> <span class="n">cbname</span>
+
+    <span class="k">def</span> <span class="nf">trace_remove</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Delete the trace callback for a variable.</span>
+
+<span class="sd">        Mode is one of &quot;read&quot;, &quot;write&quot;, &quot;unset&quot; or a list or tuple of</span>
+<span class="sd">        such strings.  Must be same as were specified in trace_add().</span>
+<span class="sd">        cbname is the name of the callback returned from trace_add().</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;trace&#39;</span><span class="p">,</span> <span class="s1">&#39;remove&#39;</span><span class="p">,</span> <span class="s1">&#39;variable&#39;</span><span class="p">,</span>
+                      <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">)</span>
+        <span class="k">for</span> <span class="n">m</span><span class="p">,</span> <span class="n">ca</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">trace_info</span><span class="p">():</span>
+            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">ca</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">cbname</span><span class="p">:</span>
+                <span class="k">break</span>
+        <span class="k">else</span><span class="p">:</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">deletecommand</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
+            <span class="k">try</span><span class="p">:</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
+            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+                <span class="k">pass</span>
+
+    <span class="k">def</span> <span class="nf">trace_info</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Return all trace callback information.&quot;&quot;&quot;</span>
+        <span class="n">splitlist</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span>
+        <span class="k">return</span> <span class="p">[(</span><span class="n">splitlist</span><span class="p">(</span><span class="n">k</span><span class="p">),</span> <span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="nb">map</span><span class="p">(</span><span class="n">splitlist</span><span class="p">,</span>
+            <span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;trace&#39;</span><span class="p">,</span> <span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="s1">&#39;variable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)))]</span>
+
+    <span class="k">def</span> <span class="nf">trace_variable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Define a trace callback for the variable.</span>
+
+<span class="sd">        MODE is one of &quot;r&quot;, &quot;w&quot;, &quot;u&quot; for read, write, undefine.</span>
+<span class="sd">        CALLBACK must be a function which is called when</span>
+<span class="sd">        the variable is read, written or undefined.</span>
+
+<span class="sd">        Return the name of the callback.</span>
+
+<span class="sd">        This deprecated method wraps a deprecated Tcl method that will</span>
+<span class="sd">        likely be removed in the future.  Use trace_add() instead.</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># TODO: Add deprecation warning</span>
+        <span class="n">cbname</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">callback</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;variable&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">)</span>
         <span class="k">return</span> <span class="n">cbname</span>
+
     <span class="n">trace</span> <span class="o">=</span> <span class="n">trace_variable</span>
+
     <span class="k">def</span> <span class="nf">trace_vdelete</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Delete the trace callback for a variable.</span>
 
 <span class="sd">        MODE is one of &quot;r&quot;, &quot;w&quot;, &quot;u&quot; for read, write, undefine.</span>
 <span class="sd">        CBNAME is the name of the callback returned from trace_variable or trace.</span>
+
+<span class="sd">        This deprecated method wraps a deprecated Tcl method that will</span>
+<span class="sd">        likely be removed in the future.  Use trace_remove() instead.</span>
 <span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># TODO: Add deprecation warning</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;vdelete&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">cbname</span><span class="p">)</span>
         <span class="n">cbname</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">cbname</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
-        <span class="k">for</span> <span class="n">m</span><span class="p">,</span> <span class="n">ca</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">trace_vinfo</span><span class="p">():</span>
+        <span class="k">for</span> <span class="n">m</span><span class="p">,</span> <span class="n">ca</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">trace_info</span><span class="p">():</span>
             <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">ca</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">cbname</span><span class="p">:</span>
                 <span class="k">break</span>
         <span class="k">else</span><span class="p">:</span>
@@ -467,11 +599,18 @@
                 <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">cbname</span><span class="p">)</span>
             <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
                 <span class="k">pass</span>
+
     <span class="k">def</span> <span class="nf">trace_vinfo</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Return all trace callback information.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;vinfo&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)))</span>
-    <span class="k">def</span> <span class="nf">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Return all trace callback information.</span>
+
+<span class="sd">        This deprecated method wraps a deprecated Tcl method that will</span>
+<span class="sd">        likely be removed in the future.  Use trace_info() instead.</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="c1"># TODO: Add deprecation warning</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;trace&quot;</span><span class="p">,</span> <span class="s2">&quot;vinfo&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))]</span>
+
+    <span class="k">def</span> <span class="fm">__eq__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Comparison for equality (==).</span>
 
 <span class="sd">        Note: if the Variable&#39;s master matters to behavior</span>
@@ -483,7 +622,7 @@
 <span class="k">class</span> <span class="nc">StringVar</span><span class="p">(</span><span class="n">Variable</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Value holder for strings variables.&quot;&quot;&quot;</span>
     <span class="n">_default</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a string variable.</span>
 
 <span class="sd">        MASTER can be given as master widget.</span>
@@ -498,14 +637,14 @@
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return value of variable as string.&quot;&quot;&quot;</span>
         <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
-        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">basestring</span><span class="p">):</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
             <span class="k">return</span> <span class="n">value</span>
         <span class="k">return</span> <span class="nb">str</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
 
 <span class="k">class</span> <span class="nc">IntVar</span><span class="p">(</span><span class="n">Variable</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Value holder for integer variables.&quot;&quot;&quot;</span>
     <span class="n">_default</span> <span class="o">=</span> <span class="mi">0</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct an integer variable.</span>
 
 <span class="sd">        MASTER can be given as master widget.</span>
@@ -517,20 +656,18 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="n">Variable</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
 
-    <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Set the variable to value, converting booleans to integers.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">bool</span><span class="p">):</span>
-            <span class="n">value</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
-        <span class="k">return</span> <span class="n">Variable</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
-
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the value of the variable as an integer.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+        <span class="k">except</span> <span class="p">(</span><span class="ne">TypeError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
+            <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">DoubleVar</span><span class="p">(</span><span class="n">Variable</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Value holder for float variables.&quot;&quot;&quot;</span>
     <span class="n">_default</span> <span class="o">=</span> <span class="mf">0.0</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a float variable.</span>
 
 <span class="sd">        MASTER can be given as master widget.</span>
@@ -544,12 +681,12 @@
 
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the value of the variable as a float.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">BooleanVar</span><span class="p">(</span><span class="n">Variable</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Value holder for boolean variables.&quot;&quot;&quot;</span>
     <span class="n">_default</span> <span class="o">=</span> <span class="kc">False</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a boolean variable.</span>
 
 <span class="sd">        MASTER can be given as master widget.</span>
@@ -564,10 +701,14 @@
     <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the variable to VALUE.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalsetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
+    <span class="n">initialize</span> <span class="o">=</span> <span class="nb">set</span>
 
     <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the value of the variable as a bool.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tk</span><span class="o">.</span><span class="n">globalgetvar</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">))</span>
+        <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">&quot;invalid literal for getboolean()&quot;</span><span class="p">)</span>
 
 <span class="k">def</span> <span class="nf">mainloop</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Run the main loop of Tcl.&quot;&quot;&quot;</span>
@@ -579,7 +720,10 @@
 
 <span class="k">def</span> <span class="nf">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Convert true and false to integer values 1 and 0.&quot;&quot;&quot;</span>
-    <span class="k">return</span> <span class="n">_default_root</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+    <span class="k">try</span><span class="p">:</span>
+        <span class="k">return</span> <span class="n">_default_root</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+    <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
+        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">&quot;invalid literal for getboolean()&quot;</span><span class="p">)</span>
 
 <span class="c1"># Methods defined on both toplevel and interior widgets</span>
 <span class="k">class</span> <span class="nc">Misc</span><span class="p">:</span>
@@ -587,6 +731,9 @@
 
 <span class="sd">    Base class which defines methods common for interior widgets.&quot;&quot;&quot;</span>
 
+    <span class="c1"># used for generating child widget names</span>
+    <span class="n">_last_child_ids</span> <span class="o">=</span> <span class="kc">None</span>
+
     <span class="c1"># XXX font command?</span>
     <span class="n">_tclCommands</span> <span class="o">=</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
@@ -633,13 +780,7 @@
 <span class="sd">        background, highlightColor, selectForeground,</span>
 <span class="sd">        disabledForeground, insertBackground, troughColor.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="s1">&#39;tk_setPalette&#39;</span><span class="p">,)</span>
-              <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">kw</span><span class="o">.</span><span class="n">items</span><span class="p">()))</span>
-    <span class="k">def</span> <span class="nf">tk_menuBar</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Do not use. Needed in Tk 3.6 and earlier.&quot;&quot;&quot;</span>
-        <span class="c1"># obsolete since Tk 4.0</span>
-        <span class="kn">import</span> <span class="nn">warnings</span>
-        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s1">&#39;tk_menuBar() does nothing and will be removed in 3.6&#39;</span><span class="p">,</span>
-                      <span class="ne">DeprecationWarning</span><span class="p">,</span> <span class="n">stacklevel</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
+              <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">+</span> <span class="n">_flatten</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">kw</span><span class="o">.</span><span class="n">items</span><span class="p">())))</span>
     <span class="k">def</span> <span class="nf">wait_variable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;PY_VAR&#39;</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Wait until the variable is modified.</span>
 
@@ -668,11 +809,26 @@
     <span class="k">def</span> <span class="nf">getvar</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;PY_VAR&#39;</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return value of Tcl variable NAME.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getvar</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
-    <span class="n">getint</span> <span class="o">=</span> <span class="nb">int</span>
-    <span class="n">getdouble</span> <span class="o">=</span> <span class="nb">float</span>
+
+    <span class="k">def</span> <span class="nf">getint</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">except</span> <span class="n">TclError</span> <span class="k">as</span> <span class="n">exc</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">exc</span><span class="p">))</span>
+
+    <span class="k">def</span> <span class="nf">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">except</span> <span class="n">TclError</span> <span class="k">as</span> <span class="n">exc</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">exc</span><span class="p">))</span>
+
     <span class="k">def</span> <span class="nf">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a boolean value for Tcl boolean values true and false given as parameter.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+        <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">&quot;invalid literal for getboolean()&quot;</span><span class="p">)</span>
+
     <span class="k">def</span> <span class="nf">focus_set</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Direct input focus to this widget.</span>
 
@@ -741,6 +897,7 @@
         <span class="k">if</span> <span class="ow">not</span> <span class="n">func</span><span class="p">:</span>
             <span class="c1"># I&#39;d rather use time.sleep(ms*0.001)</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;after&#39;</span><span class="p">,</span> <span class="n">ms</span><span class="p">)</span>
+            <span class="k">return</span> <span class="kc">None</span>
         <span class="k">else</span><span class="p">:</span>
             <span class="k">def</span> <span class="nf">callit</span><span class="p">():</span>
                 <span class="k">try</span><span class="p">:</span>
@@ -764,11 +921,13 @@
         <span class="sd">&quot;&quot;&quot;Cancel scheduling of function identified with ID.</span>
 
 <span class="sd">        Identifier returned by after or after_idle must be</span>
-<span class="sd">        given as first parameter.&quot;&quot;&quot;</span>
+<span class="sd">        given as first parameter.</span>
+<span class="sd">        &quot;&quot;&quot;</span>
+        <span class="k">if</span> <span class="ow">not</span> <span class="nb">id</span><span class="p">:</span>
+            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;id must be a valid identifier returned from &#39;</span>
+                             <span class="s1">&#39;after or after_idle&#39;</span><span class="p">)</span>
         <span class="k">try</span><span class="p">:</span>
             <span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;after&#39;</span><span class="p">,</span> <span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="nb">id</span><span class="p">)</span>
-            <span class="c1"># In Tk 8.3, splitlist returns: (script, type)</span>
-            <span class="c1"># In Tk 8.4, splitlist may return (script, type) or (script,)</span>
             <span class="n">script</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">data</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">deletecommand</span><span class="p">(</span><span class="n">script</span><span class="p">)</span>
         <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
@@ -935,13 +1094,10 @@
         <span class="sd">&quot;&quot;&quot;Raise this widget in the stacking order.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;raise&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">aboveThis</span><span class="p">)</span>
     <span class="n">lift</span> <span class="o">=</span> <span class="n">tkraise</span>
-    <span class="k">def</span> <span class="nf">colormodel</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Useless. Not implemented in Tk.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk&#39;</span><span class="p">,</span> <span class="s1">&#39;colormodel&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_atom</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">displayof</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return integer which represents atom NAME.&quot;&quot;&quot;</span>
         <span class="n">args</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;atom&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_displayof</span><span class="p">(</span><span class="n">displayof</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">name</span><span class="p">,)</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_atomname</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">id</span><span class="p">,</span> <span class="n">displayof</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return name of atom with identifier ID.&quot;&quot;&quot;</span>
         <span class="n">args</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;atomname&#39;</span><span class="p">)</span> \
@@ -949,7 +1105,7 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_cells</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return number of cells in the colormap for this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;cells&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_children</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all widgets which are children of this widget.&quot;&quot;&quot;</span>
@@ -980,22 +1136,22 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_depth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of bits per pixel.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;depth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;depth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_exists</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return true if this widget exists.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;exists&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_fpixels</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">number</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels for the given distance NUMBER</span>
 <span class="sd">        (e.g. &quot;3c&quot;) as float.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;fpixels&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">number</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_geometry</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return geometry string for this widget in the form &quot;widthxheight+X+Y&quot;.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;geometry&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_height</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return height of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_id</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return identifier ID for this widget.&quot;&quot;&quot;</span>
@@ -1006,7 +1162,7 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_ismapped</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return true if this widget is mapped.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;ismapped&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_manager</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the window manager name for this widget.&quot;&quot;&quot;</span>
@@ -1024,11 +1180,11 @@
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">winfo_pixels</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">number</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Rounded integer value of winfo_fpixels.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pixels&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">number</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_pointerx</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the x coordinate of the pointer on the root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pointerx&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_pointerxy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a tuple of x and y coordinates of the pointer on the root window.&quot;&quot;&quot;</span>
@@ -1036,15 +1192,15 @@
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pointerxy&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_pointery</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y coordinate of the pointer on the root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;pointery&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_reqheight</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return requested height of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;reqheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_reqwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return requested width of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;reqwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_rgb</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">color</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return tuple of decimal values for red, green, blue for</span>
@@ -1054,12 +1210,12 @@
     <span class="k">def</span> <span class="nf">winfo_rootx</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return x coordinate of upper left corner of this widget on the</span>
 <span class="sd">        root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;rootx&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_rooty</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return y coordinate of upper left corner of this widget on the</span>
 <span class="sd">        root window.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;rooty&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screen</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the screen name of this widget.&quot;&quot;&quot;</span>
@@ -1067,27 +1223,27 @@
     <span class="k">def</span> <span class="nf">winfo_screencells</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of the cells in the colormap of the screen</span>
 <span class="sd">        of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screencells&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screendepth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of bits per pixel of the root window of the</span>
 <span class="sd">        screen of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screendepth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenheight</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the height of the screen of this widget</span>
 <span class="sd">        in pixel.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenmmheight</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the height of the screen of</span>
 <span class="sd">        this widget in mm.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenmmheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenmmwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the width of the screen of</span>
 <span class="sd">        this widget in mm.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenmmwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_screenvisual</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return one of the strings directcolor, grayscale, pseudocolor,</span>
@@ -1097,7 +1253,7 @@
     <span class="k">def</span> <span class="nf">winfo_screenwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of pixels of the width of the screen of</span>
 <span class="sd">        this widget in pixel.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;screenwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_server</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return information of the X-Server of the screen of this widget in</span>
@@ -1109,7 +1265,7 @@
             <span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;toplevel&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_viewable</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return true if the widget and all its higher ancestors are mapped.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;viewable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_visual</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return one of the strings directcolor, grayscale, pseudocolor,</span>
@@ -1119,18 +1275,16 @@
     <span class="k">def</span> <span class="nf">winfo_visualid</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the X identifier for the visual for this widget.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;visualid&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">winfo_visualsavailable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">includeids</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
+    <span class="k">def</span> <span class="nf">winfo_visualsavailable</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">includeids</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all visuals available for the screen</span>
 <span class="sd">        of this widget.</span>
 
 <span class="sd">        Each item in the list consists of a visual name (see winfo_visual), a</span>
-<span class="sd">        depth and if INCLUDEIDS=1 is given also the X identifier.&quot;&quot;&quot;</span>
-        <span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">split</span><span class="p">(</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;visualsavailable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span>
-                     <span class="n">includeids</span> <span class="ow">and</span> <span class="s1">&#39;includeids&#39;</span> <span class="ow">or</span> <span class="kc">None</span><span class="p">))</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span><span class="p">:</span>
-            <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">data</span><span class="p">)]</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__winfo_parseitem</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
+<span class="sd">        depth and if includeids is true is given also the X identifier.&quot;&quot;&quot;</span>
+        <span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;visualsavailable&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span>
+                            <span class="s1">&#39;includeids&#39;</span> <span class="k">if</span> <span class="n">includeids</span> <span class="k">else</span> <span class="kc">None</span><span class="p">)</span>
+        <span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">data</span><span class="p">)]</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">__winfo_parseitem</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">data</span><span class="p">]</span>
     <span class="k">def</span> <span class="nf">__winfo_parseitem</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">t</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="n">t</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__winfo_getint</span><span class="p">,</span> <span class="n">t</span><span class="p">[</span><span class="mi">1</span><span class="p">:]))</span>
@@ -1141,37 +1295,37 @@
         <span class="sd">&quot;&quot;&quot;Return the height of the virtual root window associated with this</span>
 <span class="sd">        widget in pixels. If there is no virtual root window return the</span>
 <span class="sd">        height of the screen.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrootheight&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_vrootwidth</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the width of the virtual root window associated with this</span>
 <span class="sd">        widget in pixel. If there is no virtual root window return the</span>
 <span class="sd">        width of the screen.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrootwidth&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_vrootx</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the x offset of the virtual root relative to the root</span>
 <span class="sd">        window of the screen of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrootx&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_vrooty</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y offset of the virtual root relative to the root</span>
 <span class="sd">        window of the screen of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;vrooty&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_width</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the width of this widget.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_x</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the x coordinate of the upper left corner of this widget</span>
 <span class="sd">        in the parent.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;x&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">winfo_y</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y coordinate of the upper left corner of this widget</span>
 <span class="sd">        in the parent.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;winfo&#39;</span><span class="p">,</span> <span class="s1">&#39;y&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Enter event loop until all pending events have been processed by Tcl.&quot;&quot;&quot;</span>
@@ -1195,7 +1349,7 @@
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;bindtags&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">tagList</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">_bind</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">what</span><span class="p">,</span> <span class="n">sequence</span><span class="p">,</span> <span class="n">func</span><span class="p">,</span> <span class="n">add</span><span class="p">,</span> <span class="n">needcleanup</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">func</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">what</span> <span class="o">+</span> <span class="p">(</span><span class="n">sequence</span><span class="p">,</span> <span class="n">func</span><span class="p">))</span>
         <span class="k">elif</span> <span class="n">func</span><span class="p">:</span>
             <span class="n">funcid</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_substitute</span><span class="p">,</span>
@@ -1288,11 +1442,11 @@
     <span class="k">def</span> <span class="nf">_getints</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">string</span><span class="p">:</span>
-            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="n">getint</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
+            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
     <span class="k">def</span> <span class="nf">_getdoubles</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">string</span><span class="p">:</span>
-            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="n">getdouble</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
+            <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="n">string</span><span class="p">)))</span>
     <span class="k">def</span> <span class="nf">_getboolean</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">string</span><span class="p">:</span>
@@ -1323,18 +1477,17 @@
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
             <span class="k">if</span> <span class="n">v</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
                 <span class="k">if</span> <span class="n">k</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;_&#39;</span><span class="p">:</span> <span class="n">k</span> <span class="o">=</span> <span class="n">k</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
-                <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+                <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">v</span><span class="p">):</span>
                     <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
                 <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="p">(</span><span class="nb">tuple</span><span class="p">,</span> <span class="nb">list</span><span class="p">)):</span>
                     <span class="n">nv</span> <span class="o">=</span> <span class="p">[]</span>
                     <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">v</span><span class="p">:</span>
-                        <span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="p">(</span><span class="n">basestring</span><span class="p">,</span> <span class="nb">int</span><span class="p">,</span> <span class="n">long</span><span class="p">)):</span>
+                        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="nb">int</span><span class="p">):</span>
+                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
+                        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
+                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">_stringify</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
+                        <span class="k">else</span><span class="p">:</span>
                             <span class="k">break</span>
-                        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">long</span><span class="p">)):</span>
-                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">%d</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">item</span><span class="p">)</span>
-                        <span class="k">else</span><span class="p">:</span>
-                            <span class="c1"># format it to proper Tcl code if it contains space</span>
-                            <span class="n">nv</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">_stringify</span><span class="p">(</span><span class="n">item</span><span class="p">))</span>
                     <span class="k">else</span><span class="p">:</span>
                         <span class="n">v</span> <span class="o">=</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">nv</span><span class="p">)</span>
                 <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
@@ -1364,7 +1517,7 @@
         <span class="n">f</span> <span class="o">=</span> <span class="n">CallWrapper</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">subst</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="fm">__call__</span>
         <span class="n">name</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="nb">id</span><span class="p">(</span><span class="n">f</span><span class="p">))</span>
         <span class="k">try</span><span class="p">:</span>
-            <span class="n">func</span> <span class="o">=</span> <span class="n">func</span><span class="o">.</span><span class="n">im_func</span>
+            <span class="n">func</span> <span class="o">=</span> <span class="n">func</span><span class="o">.</span><span class="vm">__func__</span>
         <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
             <span class="k">pass</span>
         <span class="k">try</span><span class="p">:</span>
@@ -1392,12 +1545,12 @@
         <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_subst_format</span><span class="p">):</span> <span class="k">return</span> <span class="n">args</span>
         <span class="n">getboolean</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span>
 
-        <span class="n">getint</span> <span class="o">=</span> <span class="nb">int</span>
+        <span class="n">getint</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span>
         <span class="k">def</span> <span class="nf">getint_event</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
             <span class="sd">&quot;&quot;&quot;Tk changed behavior in 8.4.2, returning &quot;??&quot; rather more often.&quot;&quot;&quot;</span>
             <span class="k">try</span><span class="p">:</span>
-                <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
-            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+                <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
+            <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
                 <span class="k">return</span> <span class="n">s</span>
 
         <span class="n">nsign</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">k</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">A</span><span class="p">,</span> <span class="n">E</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">W</span><span class="p">,</span> <span class="n">T</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">D</span> <span class="o">=</span> <span class="n">args</span>
@@ -1432,7 +1585,10 @@
         <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span> <span class="k">pass</span>
         <span class="n">e</span><span class="o">.</span><span class="n">keysym</span> <span class="o">=</span> <span class="n">K</span>
         <span class="n">e</span><span class="o">.</span><span class="n">keysym_num</span> <span class="o">=</span> <span class="n">getint_event</span><span class="p">(</span><span class="n">N</span><span class="p">)</span>
-        <span class="n">e</span><span class="o">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">T</span>
+        <span class="k">try</span><span class="p">:</span>
+            <span class="n">e</span><span class="o">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">EventType</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>
+        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+            <span class="n">e</span><span class="o">.</span><span class="n">type</span> <span class="o">=</span> <span class="n">T</span>
         <span class="k">try</span><span class="p">:</span>
             <span class="n">e</span><span class="o">.</span><span class="n">widget</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">W</span><span class="p">)</span>
         <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
@@ -1441,13 +1597,12 @@
         <span class="n">e</span><span class="o">.</span><span class="n">y_root</span> <span class="o">=</span> <span class="n">getint_event</span><span class="p">(</span><span class="n">Y</span><span class="p">)</span>
         <span class="k">try</span><span class="p">:</span>
             <span class="n">e</span><span class="o">.</span><span class="n">delta</span> <span class="o">=</span> <span class="n">getint</span><span class="p">(</span><span class="n">D</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+        <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
             <span class="n">e</span><span class="o">.</span><span class="n">delta</span> <span class="o">=</span> <span class="mi">0</span>
         <span class="k">return</span> <span class="p">(</span><span class="n">e</span><span class="p">,)</span>
     <span class="k">def</span> <span class="nf">_report_exception</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-        <span class="kn">import</span> <span class="nn">sys</span>
-        <span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_type</span><span class="p">,</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_value</span><span class="p">,</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_traceback</span>
+        <span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">exc_info</span><span class="p">()</span>
         <span class="n">root</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_root</span><span class="p">()</span>
         <span class="n">root</span><span class="o">.</span><span class="n">report_callback_exception</span><span class="p">(</span><span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span><span class="p">)</span>
 
@@ -1471,7 +1626,7 @@
             <span class="n">cnf</span> <span class="o">=</span> <span class="n">_cnfmerge</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">cnf</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure</span><span class="p">(</span><span class="n">_flatten</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">cmd</span><span class="p">)))</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure1</span><span class="p">(</span><span class="n">_flatten</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">cmd</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">cnf</span><span class="p">)))</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">_flatten</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">cmd</span><span class="p">))</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">))</span>
     <span class="c1"># These used to be defined in Widget:</span>
@@ -1488,18 +1643,21 @@
         <span class="sd">&quot;&quot;&quot;Return the resource value for a KEY given as string.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;cget&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="n">key</span><span class="p">)</span>
     <span class="fm">__getitem__</span> <span class="o">=</span> <span class="n">cget</span>
-    <span class="k">def</span> <span class="nf">__setitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__setitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">configure</span><span class="p">({</span><span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">})</span>
-    <span class="k">def</span> <span class="nf">__contains__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
-        <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s2">&quot;Tkinter objects don&#39;t support &#39;in&#39; tests.&quot;</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">keys</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all resource names of this widget.&quot;&quot;&quot;</span>
         <span class="n">splitlist</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span>
         <span class="k">return</span> <span class="p">[</span><span class="n">splitlist</span><span class="p">(</span><span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">:]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
                 <span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;configure&#39;</span><span class="p">))]</span>
-    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the window path name of this widget.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span>
+
+    <span class="k">def</span> <span class="fm">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+        <span class="k">return</span> <span class="s1">&#39;&lt;</span><span class="si">%s</span><span class="s1">.</span><span class="si">%s</span><span class="s1"> object </span><span class="si">%s</span><span class="s1">&gt;&#39;</span> <span class="o">%</span> <span class="p">(</span>
+            <span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__module__</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__qualname__</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
+
     <span class="c1"># Pack methods that apply to the master</span>
     <span class="n">_noarg_</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;_noarg_&#39;</span><span class="p">]</span>
     <span class="k">def</span> <span class="nf">pack_propagate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">flag</span><span class="o">=</span><span class="n">_noarg_</span><span class="p">):</span>
@@ -1518,19 +1676,26 @@
     <span class="k">def</span> <span class="nf">pack_slaves</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all slaves of this widget</span>
 <span class="sd">        in its packing order.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span>
-               <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
-                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;pack&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)))</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
+                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;pack&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))]</span>
     <span class="n">slaves</span> <span class="o">=</span> <span class="n">pack_slaves</span>
     <span class="c1"># Place method that applies to the master</span>
     <span class="k">def</span> <span class="nf">place_slaves</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of all slaves of this widget</span>
 <span class="sd">        in its packing order.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span>
-               <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
-                       <span class="s1">&#39;place&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)))</span>
+                       <span class="s1">&#39;place&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">))]</span>
     <span class="c1"># Grid methods that apply to the master</span>
+    <span class="k">def</span> <span class="nf">grid_anchor</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">anchor</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;The anchor value controls how to place the grid within the</span>
+<span class="sd">        master when no row/column has any weight.</span>
+
+<span class="sd">        The default anchor is nw.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;grid&#39;</span><span class="p">,</span> <span class="s1">&#39;anchor&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">anchor</span><span class="p">)</span>
+    <span class="n">anchor</span> <span class="o">=</span> <span class="n">grid_anchor</span>
     <span class="k">def</span> <span class="nf">grid_bbox</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">column</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">row</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">col2</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">row2</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a tuple of integer coordinates for the bounding</span>
 <span class="sd">        box of this widget controlled by the geometry manager grid.</span>
@@ -1549,7 +1714,6 @@
         <span class="k">if</span> <span class="n">col2</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span> <span class="ow">and</span> <span class="n">row2</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span> <span class="o">+</span> <span class="p">(</span><span class="n">col2</span><span class="p">,</span> <span class="n">row2</span><span class="p">)</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getints</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">))</span> <span class="ow">or</span> <span class="kc">None</span>
-
     <span class="n">bbox</span> <span class="o">=</span> <span class="n">grid_bbox</span>
 
     <span class="k">def</span> <span class="nf">_gridconvvalue</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
@@ -1559,16 +1723,16 @@
                 <span class="k">if</span> <span class="ow">not</span> <span class="n">svalue</span><span class="p">:</span>
                     <span class="k">return</span> <span class="kc">None</span>
                 <span class="k">elif</span> <span class="s1">&#39;.&#39;</span> <span class="ow">in</span> <span class="n">svalue</span><span class="p">:</span>
-                    <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
+                    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
                 <span class="k">else</span><span class="p">:</span>
-                    <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
-            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
+                    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">svalue</span><span class="p">)</span>
+            <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
                 <span class="k">pass</span>
         <span class="k">return</span> <span class="n">value</span>
 
     <span class="k">def</span> <span class="nf">_grid_configure</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="ow">is</span> <span class="n">StringType</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
             <span class="k">if</span> <span class="n">cnf</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">:]</span> <span class="o">==</span> <span class="s1">&#39;_&#39;</span><span class="p">:</span>
                 <span class="n">cnf</span> <span class="o">=</span> <span class="n">cnf</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
             <span class="k">if</span> <span class="n">cnf</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="s1">&#39;-&#39;</span><span class="p">:</span>
@@ -1635,9 +1799,9 @@
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-row&#39;</span><span class="p">,</span> <span class="n">row</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">column</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-column&#39;</span><span class="p">,</span> <span class="n">column</span><span class="p">)</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span>
-               <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
-                   <span class="p">(</span><span class="s1">&#39;grid&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)))</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+                   <span class="p">(</span><span class="s1">&#39;grid&#39;</span><span class="p">,</span> <span class="s1">&#39;slaves&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))]</span>
 
     <span class="c1"># Support for the &quot;event&quot; command, new in Tk 4.2.</span>
     <span class="c1"># By Case Roole.</span>
@@ -1683,19 +1847,19 @@
 <span class="k">class</span> <span class="nc">CallWrapper</span><span class="p">:</span>
     <span class="sd">&quot;&quot;&quot;Internal class. Stores function to call when some user</span>
 <span class="sd">    defined Tcl function is called e.g. after an event occurred.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">func</span><span class="p">,</span> <span class="n">subst</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">func</span><span class="p">,</span> <span class="n">subst</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Store FUNC, SUBST and WIDGET as members.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">func</span> <span class="o">=</span> <span class="n">func</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">subst</span> <span class="o">=</span> <span class="n">subst</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">widget</span> <span class="o">=</span> <span class="n">widget</span>
-    <span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Apply first function SUBST to arguments, than FUNC.&quot;&quot;&quot;</span>
         <span class="k">try</span><span class="p">:</span>
             <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">subst</span><span class="p">:</span>
                 <span class="n">args</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">subst</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">SystemExit</span><span class="p">,</span> <span class="n">msg</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">SystemExit</span><span class="p">,</span> <span class="n">msg</span>
+        <span class="k">except</span> <span class="ne">SystemExit</span><span class="p">:</span>
+            <span class="k">raise</span>
         <span class="k">except</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">widget</span><span class="o">.</span><span class="n">_report_exception</span><span class="p">()</span>
 
@@ -1794,7 +1958,8 @@
         <span class="k">if</span> <span class="n">wlist</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
         <span class="k">else</span><span class="p">:</span>
-            <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)))</span>
+            <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_nametowidget</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
+                    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">))]</span>
     <span class="n">colormapwindows</span> <span class="o">=</span> <span class="n">wm_colormapwindows</span>
     <span class="k">def</span> <span class="nf">wm_command</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Store VALUE in WM_COMMAND property. It is the command</span>
@@ -1813,6 +1978,14 @@
 <span class="sd">        the focus. Return current focus model if MODEL is None.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;focusmodel&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>
     <span class="n">focusmodel</span> <span class="o">=</span> <span class="n">wm_focusmodel</span>
+    <span class="k">def</span> <span class="nf">wm_forget</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">window</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;The window will be unmapped from the screen and will no longer</span>
+<span class="sd">        be managed by wm. toplevel windows will be treated like frame</span>
+<span class="sd">        windows once they are no longer managed by wm, however, the menu</span>
+<span class="sd">        option configuration will be remembered and the menus will return</span>
+<span class="sd">        once the widget is managed again.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;forget&#39;</span><span class="p">,</span> <span class="n">window</span><span class="p">)</span>
+    <span class="n">forget</span> <span class="o">=</span> <span class="n">wm_forget</span>
     <span class="k">def</span> <span class="nf">wm_frame</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return identifier for decorative frame of this widget if present.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;frame&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
@@ -1866,6 +2039,31 @@
 <span class="sd">        None is given.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconname&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">newName</span><span class="p">)</span>
     <span class="n">iconname</span> <span class="o">=</span> <span class="n">wm_iconname</span>
+    <span class="k">def</span> <span class="nf">wm_iconphoto</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Sets the titlebar icon for this window based on the named photo</span>
+<span class="sd">        images passed through args. If default is True, this is applied to</span>
+<span class="sd">        all future created toplevels as well.</span>
+
+<span class="sd">        The data in the images is taken as a snapshot at the time of</span>
+<span class="sd">        invocation. If the images are later changed, this is not reflected</span>
+<span class="sd">        to the titlebar icons. Multiple images are accepted to allow</span>
+<span class="sd">        different images sizes to be provided. The window manager may scale</span>
+<span class="sd">        provided icons to an appropriate size.</span>
+
+<span class="sd">        On Windows, the images are packed into a Windows icon structure.</span>
+<span class="sd">        This will override an icon specified to wm_iconbitmap, and vice</span>
+<span class="sd">        versa.</span>
+
+<span class="sd">        On X, the images are arranged into the _NET_WM_ICON X property,</span>
+<span class="sd">        which most modern window managers support. An icon specified by</span>
+<span class="sd">        wm_iconbitmap may exist simultaneously.</span>
+
+<span class="sd">        On Macintosh, this currently does nothing.&quot;&quot;&quot;</span>
+        <span class="k">if</span> <span class="n">default</span><span class="p">:</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconphoto&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s2">&quot;-default&quot;</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
+        <span class="k">else</span><span class="p">:</span>
+            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconphoto&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
+    <span class="n">iconphoto</span> <span class="o">=</span> <span class="n">wm_iconphoto</span>
     <span class="k">def</span> <span class="nf">wm_iconposition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the position of the icon of this widget to X and Y. Return</span>
 <span class="sd">        a tuple of the current values of X and X if None is given.&quot;&quot;&quot;</span>
@@ -1877,6 +2075,12 @@
 <span class="sd">        value if None is given.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;iconwindow&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">pathName</span><span class="p">)</span>
     <span class="n">iconwindow</span> <span class="o">=</span> <span class="n">wm_iconwindow</span>
+    <span class="k">def</span> <span class="nf">wm_manage</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">widget</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;The widget specified will become a stand alone top-level window.</span>
+<span class="sd">        The window will be decorated with the window managers title bar,</span>
+<span class="sd">        etc.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;wm&#39;</span><span class="p">,</span> <span class="s1">&#39;manage&#39;</span><span class="p">,</span> <span class="n">widget</span><span class="p">)</span>
+    <span class="n">manage</span> <span class="o">=</span> <span class="n">wm_manage</span>
     <span class="k">def</span> <span class="nf">wm_maxsize</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set max WIDTH and HEIGHT for this widget. If the window is gridded</span>
 <span class="sd">        the values are given in grid units. Return the current values if None</span>
@@ -1908,7 +2112,7 @@
         <span class="sd">&quot;&quot;&quot;Bind function FUNC to command NAME for this widget.</span>
 <span class="sd">        Return the function bound to NAME if None is given. NAME could be</span>
 <span class="sd">        e.g. &quot;WM_SAVE_YOURSELF&quot; or &quot;WM_DELETE_WINDOW&quot;.&quot;&quot;&quot;</span>
-        <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+        <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
             <span class="n">command</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">func</span><span class="p">)</span>
         <span class="k">else</span><span class="p">:</span>
             <span class="n">command</span> <span class="o">=</span> <span class="n">func</span>
@@ -1951,7 +2155,7 @@
     <span class="sd">&quot;&quot;&quot;Toplevel widget of Tk which represents mostly the main window</span>
 <span class="sd">    of an application. It has an associated Tcl interpreter.&quot;&quot;&quot;</span>
     <span class="n">_w</span> <span class="o">=</span> <span class="s1">&#39;.&#39;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">screenName</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">baseName</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">className</span><span class="o">=</span><span class="s1">&#39;Tk&#39;</span><span class="p">,</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">screenName</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">baseName</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">className</span><span class="o">=</span><span class="s1">&#39;Tk&#39;</span><span class="p">,</span>
                  <span class="n">useTk</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">sync</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">use</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a new Toplevel widget on screen SCREENNAME. A new Tcl interpreter will</span>
 <span class="sd">        be created. BASENAME will be used for the identification of the profile file (see</span>
@@ -1968,7 +2172,7 @@
             <span class="kn">import</span> <span class="nn">os</span>
             <span class="n">baseName</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
             <span class="n">baseName</span><span class="p">,</span> <span class="n">ext</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">baseName</span><span class="p">)</span>
-            <span class="k">if</span> <span class="n">ext</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;.py&#39;</span><span class="p">,</span> <span class="s1">&#39;.pyc&#39;</span><span class="p">,</span> <span class="s1">&#39;.pyo&#39;</span><span class="p">):</span>
+            <span class="k">if</span> <span class="n">ext</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;.py&#39;</span><span class="p">,</span> <span class="s1">&#39;.pyc&#39;</span><span class="p">):</span>
                 <span class="n">baseName</span> <span class="o">=</span> <span class="n">baseName</span> <span class="o">+</span> <span class="n">ext</span>
         <span class="n">interactive</span> <span class="o">=</span> <span class="mi">0</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span> <span class="o">=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">screenName</span><span class="p">,</span> <span class="n">baseName</span><span class="p">,</span> <span class="n">className</span><span class="p">,</span> <span class="n">interactive</span><span class="p">,</span> <span class="n">wantobjects</span><span class="p">,</span> <span class="n">useTk</span><span class="p">,</span> <span class="n">sync</span><span class="p">,</span> <span class="n">use</span><span class="p">)</span>
@@ -1987,19 +2191,13 @@
         <span class="c1"># Version sanity checks</span>
         <span class="n">tk_version</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getvar</span><span class="p">(</span><span class="s1">&#39;tk_version&#39;</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">tk_version</span> <span class="o">!=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> \
-            <span class="s2">&quot;tk.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtk.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span> \
-            <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">,</span> <span class="n">tk_version</span><span class="p">)</span>
+            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s2">&quot;tk.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtk.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span>
+                               <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TK_VERSION</span><span class="p">,</span> <span class="n">tk_version</span><span class="p">))</span>
         <span class="c1"># Under unknown circumstances, tcl_version gets coerced to float</span>
         <span class="n">tcl_version</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getvar</span><span class="p">(</span><span class="s1">&#39;tcl_version&#39;</span><span class="p">))</span>
         <span class="k">if</span> <span class="n">tcl_version</span> <span class="o">!=</span> <span class="n">_tkinter</span><span class="o">.</span><span class="n">TCL_VERSION</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> \
-            <span class="s2">&quot;tcl.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtcl.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span> \
-            <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TCL_VERSION</span><span class="p">,</span> <span class="n">tcl_version</span><span class="p">)</span>
-        <span class="k">if</span> <span class="n">TkVersion</span> <span class="o">&lt;</span> <span class="mf">4.0</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> \
-            <span class="s2">&quot;Tk 4.0 or higher is required; found Tk </span><span class="si">%s</span><span class="s2">&quot;</span> \
-            <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="n">TkVersion</span><span class="p">)</span>
+            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s2">&quot;tcl.h version (</span><span class="si">%s</span><span class="s2">) doesn&#39;t match libtcl.a version (</span><span class="si">%s</span><span class="s2">)&quot;</span> \
+                               <span class="o">%</span> <span class="p">(</span><span class="n">_tkinter</span><span class="o">.</span><span class="n">TCL_VERSION</span><span class="p">,</span> <span class="n">tcl_version</span><span class="p">))</span>
         <span class="c1"># Create and register the tkerror and exit commands</span>
         <span class="c1"># We need to inline parts of _register here, _ register</span>
         <span class="c1"># would register differently-named commands.</span>
@@ -2015,7 +2213,7 @@
     <span class="k">def</span> <span class="nf">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Destroy this and all descendants widgets. This will</span>
 <span class="sd">        end the application of this Tcl interpreter.&quot;&quot;&quot;</span>
-        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">():</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
+        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">()):</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
         <span class="n">Misc</span><span class="o">.</span><span class="n">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
         <span class="k">global</span> <span class="n">_default_root</span>
@@ -2023,8 +2221,8 @@
             <span class="n">_default_root</span> <span class="o">=</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">readprofile</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">baseName</span><span class="p">,</span> <span class="n">className</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Internal function. It reads BASENAME.tcl and CLASSNAME.tcl into</span>
-<span class="sd">        the Tcl Interpreter and calls execfile on BASENAME.py and CLASSNAME.py if</span>
-<span class="sd">        such a file exists in the home directory.&quot;&quot;&quot;</span>
+<span class="sd">        the Tcl Interpreter and calls exec on the contents of BASENAME.py and</span>
+<span class="sd">        CLASSNAME.py if such a file exists in the home directory.&quot;&quot;&quot;</span>
         <span class="kn">import</span> <span class="nn">os</span>
         <span class="k">if</span> <span class="s1">&#39;HOME&#39;</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">:</span> <span class="n">home</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="p">[</span><span class="s1">&#39;HOME&#39;</span><span class="p">]</span>
         <span class="k">else</span><span class="p">:</span> <span class="n">home</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">curdir</span>
@@ -2033,27 +2231,27 @@
         <span class="n">base_tcl</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">home</span><span class="p">,</span> <span class="s1">&#39;.</span><span class="si">%s</span><span class="s1">.tcl&#39;</span> <span class="o">%</span> <span class="n">baseName</span><span class="p">)</span>
         <span class="n">base_py</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">home</span><span class="p">,</span> <span class="s1">&#39;.</span><span class="si">%s</span><span class="s1">.py&#39;</span> <span class="o">%</span> <span class="n">baseName</span><span class="p">)</span>
         <span class="nb">dir</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;self&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="p">}</span>
-        <span class="n">exec</span> <span class="s1">&#39;from Tkinter import *&#39;</span> <span class="ow">in</span> <span class="nb">dir</span>
+        <span class="n">exec</span><span class="p">(</span><span class="s1">&#39;from tkinter import *&#39;</span><span class="p">,</span> <span class="nb">dir</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">class_tcl</span><span class="p">):</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;source&#39;</span><span class="p">,</span> <span class="n">class_tcl</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">class_py</span><span class="p">):</span>
-            <span class="n">execfile</span><span class="p">(</span><span class="n">class_py</span><span class="p">,</span> <span class="nb">dir</span><span class="p">)</span>
+            <span class="n">exec</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">class_py</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">(),</span> <span class="nb">dir</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">base_tcl</span><span class="p">):</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;source&#39;</span><span class="p">,</span> <span class="n">base_tcl</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">base_py</span><span class="p">):</span>
-            <span class="n">execfile</span><span class="p">(</span><span class="n">base_py</span><span class="p">,</span> <span class="nb">dir</span><span class="p">)</span>
+            <span class="n">exec</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">base_py</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">(),</span> <span class="nb">dir</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">report_callback_exception</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Report callback exception on sys.stderr.</span>
 
 <span class="sd">        Applications may want to override this internal function, and</span>
 <span class="sd">        should when sys.stderr is None.&quot;&quot;&quot;</span>
-        <span class="kn">import</span> <span class="nn">traceback</span><span class="o">,</span> <span class="nn">sys</span>
-        <span class="nb">print</span> <span class="o">&gt;&gt;</span><span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="p">,</span> <span class="s2">&quot;Exception in Tkinter callback&quot;</span>
+        <span class="kn">import</span> <span class="nn">traceback</span>
+        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Exception in Tkinter callback&quot;</span><span class="p">,</span> <span class="n">file</span><span class="o">=</span><span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="p">)</span>
         <span class="n">sys</span><span class="o">.</span><span class="n">last_type</span> <span class="o">=</span> <span class="n">exc</span>
         <span class="n">sys</span><span class="o">.</span><span class="n">last_value</span> <span class="o">=</span> <span class="n">val</span>
         <span class="n">sys</span><span class="o">.</span><span class="n">last_traceback</span> <span class="o">=</span> <span class="n">tb</span>
         <span class="n">traceback</span><span class="o">.</span><span class="n">print_exception</span><span class="p">(</span><span class="n">exc</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">tb</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">attr</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">attr</span><span class="p">):</span>
         <span class="s2">&quot;Delegate attribute access to the interpreter object&quot;</span>
         <span class="k">return</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="p">,</span> <span class="n">attr</span><span class="p">)</span>
 
@@ -2222,7 +2420,15 @@
             <span class="n">name</span> <span class="o">=</span> <span class="n">cnf</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span>
             <span class="k">del</span> <span class="n">cnf</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">name</span><span class="p">:</span>
-            <span class="n">name</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="nb">id</span><span class="p">(</span><span class="bp">self</span><span class="p">))</span>
+            <span class="n">name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
+            <span class="k">if</span> <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
+                <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span> <span class="o">=</span> <span class="p">{}</span>
+            <span class="n">count</span> <span class="o">=</span> <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
+            <span class="n">master</span><span class="o">.</span><span class="n">_last_child_ids</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">count</span>
+            <span class="k">if</span> <span class="n">count</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
+                <span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;!</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="p">,)</span>
+            <span class="k">else</span><span class="p">:</span>
+                <span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;!</span><span class="si">%s%d</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">name</span>
         <span class="k">if</span> <span class="n">master</span><span class="o">.</span><span class="n">_w</span><span class="o">==</span><span class="s1">&#39;.&#39;</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span> <span class="o">=</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="n">name</span>
@@ -2232,7 +2438,7 @@
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">children</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">children</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">]</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">children</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">widgetName</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">kw</span><span class="o">=</span><span class="p">{},</span> <span class="n">extra</span><span class="o">=</span><span class="p">()):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">widgetName</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">kw</span><span class="o">=</span><span class="p">{},</span> <span class="n">extra</span><span class="o">=</span><span class="p">()):</span>
         <span class="sd">&quot;&quot;&quot;Construct a widget with the parent widget MASTER, a name WIDGETNAME</span>
 <span class="sd">        and appropriate options.&quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">kw</span><span class="p">:</span>
@@ -2241,18 +2447,16 @@
         <span class="n">BaseWidget</span><span class="o">.</span><span class="n">_setup</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">cnf</span><span class="p">)</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_tclCommands</span> <span class="o">=</span> <span class="p">[]</span>
-        <span class="n">classes</span> <span class="o">=</span> <span class="p">[]</span>
-        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
-            <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="ow">is</span> <span class="n">ClassType</span><span class="p">:</span>
-                <span class="n">classes</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">k</span><span class="p">,</span> <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]))</span>
-                <span class="k">del</span> <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]</span>
+        <span class="n">classes</span> <span class="o">=</span> <span class="p">[(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">items</span><span class="p">()</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="nb">type</span><span class="p">)]</span>
+        <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">classes</span><span class="p">:</span>
+            <span class="k">del</span> <span class="n">cnf</span><span class="p">[</span><span class="n">k</span><span class="p">]</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="p">(</span><span class="n">widgetName</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span> <span class="o">+</span> <span class="n">extra</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">))</span>
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">classes</span><span class="p">:</span>
             <span class="n">k</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">destroy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Destroy this and all descendants widgets.&quot;&quot;&quot;</span>
-        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">():</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
+        <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">children</span><span class="o">.</span><span class="n">values</span><span class="p">()):</span> <span class="n">c</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;destroy&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">children</span><span class="p">:</span>
             <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">master</span><span class="o">.</span><span class="n">children</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">]</span>
@@ -2270,7 +2474,7 @@
 
 <span class="k">class</span> <span class="nc">Toplevel</span><span class="p">(</span><span class="n">BaseWidget</span><span class="p">,</span> <span class="n">Wm</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Toplevel widget, e.g. for dialogs.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a toplevel widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: background, bd, bg, borderwidth, class,</span>
@@ -2298,7 +2502,7 @@
 
 <span class="k">class</span> <span class="nc">Button</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Button widget.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a button widget with the parent MASTER.</span>
 
 <span class="sd">        STANDARD OPTIONS</span>
@@ -2319,21 +2523,6 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;button&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
 
-    <span class="k">def</span> <span class="nf">tkButtonEnter</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonEnter&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonLeave</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonLeave&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonDown</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonDown&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonUp</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonUp&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
-    <span class="k">def</span> <span class="nf">tkButtonInvoke</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">dummy</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tkButtonInvoke&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-
     <span class="k">def</span> <span class="nf">flash</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Flash the button.</span>
 
@@ -2356,28 +2545,9 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;invoke&#39;</span><span class="p">)</span>
 
-<span class="c1"># Indices:</span>
-<span class="c1"># XXX I don&#39;t like these -- take them away</span>
-<span class="k">def</span> <span class="nf">AtEnd</span><span class="p">():</span>
-    <span class="k">return</span> <span class="s1">&#39;end&#39;</span>
-<span class="k">def</span> <span class="nf">AtInsert</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">):</span>
-    <span class="n">s</span> <span class="o">=</span> <span class="s1">&#39;insert&#39;</span>
-    <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">args</span><span class="p">:</span>
-        <span class="k">if</span> <span class="n">a</span><span class="p">:</span> <span class="n">s</span> <span class="o">=</span> <span class="n">s</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39; &#39;</span> <span class="o">+</span> <span class="n">a</span><span class="p">)</span>
-    <span class="k">return</span> <span class="n">s</span>
-<span class="k">def</span> <span class="nf">AtSelFirst</span><span class="p">():</span>
-    <span class="k">return</span> <span class="s1">&#39;sel.first&#39;</span>
-<span class="k">def</span> <span class="nf">AtSelLast</span><span class="p">():</span>
-    <span class="k">return</span> <span class="s1">&#39;sel.last&#39;</span>
-<span class="k">def</span> <span class="nf">At</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
-    <span class="k">if</span> <span class="n">y</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
-        <span class="k">return</span> <span class="s1">&#39;@</span><span class="si">%r</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">x</span><span class="p">,)</span>
-    <span class="k">else</span><span class="p">:</span>
-        <span class="k">return</span> <span class="s1">&#39;@</span><span class="si">%r</span><span class="s1">,</span><span class="si">%r</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
-
 <span class="k">class</span> <span class="nc">Canvas</span><span class="p">(</span><span class="n">Widget</span><span class="p">,</span> <span class="n">XView</span><span class="p">,</span> <span class="n">YView</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Canvas widget to display graphical elements like lines or text.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a canvas widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: background, bd, bg, borderwidth, closeenough,</span>
@@ -2439,28 +2609,28 @@
     <span class="k">def</span> <span class="nf">canvasx</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">screenx</span><span class="p">,</span> <span class="n">gridspacing</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the canvas x coordinate of pixel position SCREENX rounded</span>
 <span class="sd">        to nearest multiple of GRIDSPACING units.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;canvasx&#39;</span><span class="p">,</span> <span class="n">screenx</span><span class="p">,</span> <span class="n">gridspacing</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">canvasy</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">screeny</span><span class="p">,</span> <span class="n">gridspacing</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the canvas y coordinate of pixel position SCREENY rounded</span>
 <span class="sd">        to nearest multiple of GRIDSPACING units.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;canvasy&#39;</span><span class="p">,</span> <span class="n">screeny</span><span class="p">,</span> <span class="n">gridspacing</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">coords</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a list of coordinates for the item given in ARGS.&quot;&quot;&quot;</span>
         <span class="c1"># XXX Should use _flatten on args</span>
-        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="n">getdouble</span><span class="p">,</span>
+        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span>
                            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span>
-                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;coords&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)))</span>
+                   <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;coords&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))]</span>
     <span class="k">def</span> <span class="nf">_create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">itemType</span><span class="p">,</span> <span class="n">args</span><span class="p">,</span> <span class="n">kw</span><span class="p">):</span> <span class="c1"># Args: (val, val, ..., cnf={})</span>
         <span class="sd">&quot;&quot;&quot;Internal function.&quot;&quot;&quot;</span>
         <span class="n">args</span> <span class="o">=</span> <span class="n">_flatten</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
         <span class="n">cnf</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="ow">in</span> <span class="p">(</span><span class="n">DictionaryType</span><span class="p">,</span> <span class="n">TupleType</span><span class="p">):</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="p">(</span><span class="nb">dict</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">)):</span>
             <span class="n">args</span> <span class="o">=</span> <span class="n">args</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
         <span class="k">else</span><span class="p">:</span>
             <span class="n">cnf</span> <span class="o">=</span> <span class="p">{}</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">itemType</span><span class="p">,</span>
             <span class="o">*</span><span class="p">(</span><span class="n">args</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">))))</span>
     <span class="k">def</span> <span class="nf">create_arc</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
@@ -2544,7 +2714,7 @@
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;icursor&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return position of cursor as integer in item specified in ARGS.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">insert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Insert TEXT in item TAGORID at position POS. ARGS must</span>
 <span class="sd">        be TAGORID POS TEXT.&quot;&quot;&quot;</span>
@@ -2618,7 +2788,7 @@
 
 <span class="k">class</span> <span class="nc">Checkbutton</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Checkbutton widget which is either in on- or off-state.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a checkbutton widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: activebackground, activeforeground, anchor,</span>
@@ -2647,7 +2817,7 @@
 
 <span class="k">class</span> <span class="nc">Entry</span><span class="p">(</span><span class="n">Widget</span><span class="p">,</span> <span class="n">XView</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Entry widget which allows displaying simple text.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct an entry widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: background, bd, bg, borderwidth, cursor,</span>
@@ -2670,7 +2840,7 @@
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;icursor&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">index</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return position of cursor.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">insert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Insert STRING at INDEX.&quot;&quot;&quot;</span>
@@ -2712,7 +2882,7 @@
 
 <span class="k">class</span> <span class="nc">Frame</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Frame widget which may contain other widgets and can have a 3D border.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a frame widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: background, bd, bg, borderwidth, class,</span>
@@ -2730,7 +2900,7 @@
 
 <span class="k">class</span> <span class="nc">Label</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Label widget which can display text and bitmaps.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a label widget with the parent MASTER.</span>
 
 <span class="sd">        STANDARD OPTIONS</span>
@@ -2752,7 +2922,7 @@
 
 <span class="k">class</span> <span class="nc">Listbox</span><span class="p">(</span><span class="n">Widget</span><span class="p">,</span> <span class="n">XView</span><span class="p">,</span> <span class="n">YView</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Listbox widget which can display a list of strings.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a listbox widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: background, bd, bg, borderwidth, cursor,</span>
@@ -2785,13 +2955,13 @@
         <span class="sd">&quot;&quot;&quot;Return index of item identified with INDEX.&quot;&quot;&quot;</span>
         <span class="n">i</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="s1">&#39;none&#39;</span><span class="p">:</span> <span class="k">return</span> <span class="kc">None</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">insert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="o">*</span><span class="n">elements</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Insert ELEMENTS at INDEX.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;insert&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span> <span class="o">+</span> <span class="n">elements</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">nearest</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Get index of item which is nearest to y coordinate Y.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;nearest&#39;</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">scan_mark</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Remember the current X, Y coordinates.&quot;&quot;&quot;</span>
@@ -2825,7 +2995,7 @@
     <span class="n">select_set</span> <span class="o">=</span> <span class="n">selection_set</span>
     <span class="k">def</span> <span class="nf">size</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the number of elements in the listbox.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">itemcget</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">option</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the resource value for an ITEM and an OPTION.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
@@ -2843,7 +3013,7 @@
 
 <span class="k">class</span> <span class="nc">Menu</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Menu widget which allows displaying menu bars, pull-down menus and pop-up menus.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct menu widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: activebackground, activeborderwidth,</span>
@@ -2851,32 +3021,6 @@
 <span class="sd">        disabledforeground, fg, font, foreground, postcommand, relief,</span>
 <span class="sd">        selectcolor, takefocus, tearoff, tearoffcommand, title, type.&quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;menu&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_bindForTraversal</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="c1"># obsolete since Tk 4.0</span>
-        <span class="kn">import</span> <span class="nn">warnings</span>
-        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s1">&#39;tk_bindForTraversal() does nothing and &#39;</span>
-                      <span class="s1">&#39;will be removed in 3.6&#39;</span><span class="p">,</span>
-                      <span class="ne">DeprecationWarning</span><span class="p">,</span> <span class="n">stacklevel</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_mbPost</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_mbPost&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_mbUnpost</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_mbUnpost&#39;</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_traverseToMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">char</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_traverseToMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">char</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_traverseWithinMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">char</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_traverseWithinMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">char</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_getMenuButtons</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_getMenuButtons&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_nextMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">count</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_nextMenu&#39;</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_nextMenuEntry</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">count</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_nextMenuEntry&#39;</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_invokeMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_invokeMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_firstMenu</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_firstMenu&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_mbButtonDown</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_mbButtonDown&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">tk_popup</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">entry</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Post the menu at position X,Y with entry ENTRY.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_popup&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">entry</span><span class="p">)</span>
@@ -2947,7 +3091,7 @@
         <span class="sd">&quot;&quot;&quot;Return the index of a menu item identified by INDEX.&quot;&quot;&quot;</span>
         <span class="n">i</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
         <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="s1">&#39;none&#39;</span><span class="p">:</span> <span class="k">return</span> <span class="kc">None</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">invoke</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Invoke a menu item identified by INDEX and execute</span>
 <span class="sd">        the associated command.&quot;&quot;&quot;</span>
@@ -2961,24 +3105,28 @@
     <span class="k">def</span> <span class="nf">unpost</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Unmap a menu.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;unpost&#39;</span><span class="p">)</span>
+    <span class="k">def</span> <span class="nf">xposition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Return the x-position of the leftmost pixel of the menu item</span>
+<span class="sd">        at INDEX.&quot;&quot;&quot;</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;xposition&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">yposition</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the y-position of the topmost pixel of the menu item at INDEX.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;yposition&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">Menubutton</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Menubutton widget, obsolete since Tk8.0.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;menubutton&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
 
 <span class="k">class</span> <span class="nc">Message</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Message widget to display multiline text. Obsolete since Label does it too.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
 
 <span class="k">class</span> <span class="nc">Radiobutton</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Radiobutton widget which shows only one of several buttons in on-state.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a radiobutton widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: activebackground, activeforeground, anchor,</span>
@@ -3005,7 +3153,7 @@
 
 <span class="k">class</span> <span class="nc">Scale</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Scale widget which can display a numerical scale.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a scale widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: activebackground, background, bigincrement, bd,</span>
@@ -3019,9 +3167,9 @@
         <span class="sd">&quot;&quot;&quot;Get the current value as integer or float.&quot;&quot;&quot;</span>
         <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;get&#39;</span><span class="p">)</span>
         <span class="k">try</span><span class="p">:</span>
-            <span class="k">return</span> <span class="n">getint</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
-            <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
+        <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">,</span> <span class="n">TclError</span><span class="p">):</span>
+            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the value to VALUE.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;set&#39;</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
@@ -3038,7 +3186,7 @@
 
 <span class="k">class</span> <span class="nc">Scrollbar</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Scrollbar widget which displays a slider at a certain position.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a scrollbar widget with the parent MASTER.</span>
 
 <span class="sd">        Valid resource names: activebackground, activerelief,</span>
@@ -3048,19 +3196,23 @@
 <span class="sd">        relief, repeatdelay, repeatinterval, takefocus,</span>
 <span class="sd">        troughcolor, width.&quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;scrollbar&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">activate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
-        <span class="sd">&quot;&quot;&quot;Display the element at INDEX with activebackground and activerelief.</span>
-<span class="sd">        INDEX can be &quot;arrow1&quot;,&quot;slider&quot; or &quot;arrow2&quot;.&quot;&quot;&quot;</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;activate&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
+    <span class="k">def</span> <span class="nf">activate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+        <span class="sd">&quot;&quot;&quot;Marks the element indicated by index as active.</span>
+<span class="sd">        The only index values understood by this method are &quot;arrow1&quot;,</span>
+<span class="sd">        &quot;slider&quot;, or &quot;arrow2&quot;.  If any other value is specified then no</span>
+<span class="sd">        element of the scrollbar will be active.  If index is not specified,</span>
+<span class="sd">        the method returns the name of the element that is currently active,</span>
+<span class="sd">        or None if no element is active.&quot;&quot;&quot;</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;activate&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span> <span class="ow">or</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">delta</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">deltax</span><span class="p">,</span> <span class="n">deltay</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the fractional change of the scrollbar setting if it</span>
 <span class="sd">        would be moved by DELTAX or DELTAY pixels.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;delta&#39;</span><span class="p">,</span> <span class="n">deltax</span><span class="p">,</span> <span class="n">deltay</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">fraction</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the fractional value which corresponds to a slider</span>
 <span class="sd">        position of X,Y.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;fraction&#39;</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getdouble</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;fraction&#39;</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">identify</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the element under position X,Y as one of</span>
 <span class="sd">        &quot;arrow1&quot;,&quot;slider&quot;,&quot;arrow2&quot; or &quot;&quot;.&quot;&quot;&quot;</span>
@@ -3069,16 +3221,16 @@
         <span class="sd">&quot;&quot;&quot;Return the current fractional values (upper and lower end)</span>
 <span class="sd">        of the slider position.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getdoubles</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;get&#39;</span><span class="p">))</span>
-    <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
+    <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">first</span><span class="p">,</span> <span class="n">last</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Set the fractional values of the slider position (upper and</span>
 <span class="sd">        lower ends as value between 0 and 1).&quot;&quot;&quot;</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;set&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">)</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;set&#39;</span><span class="p">,</span> <span class="n">first</span><span class="p">,</span> <span class="n">last</span><span class="p">)</span>
 
 
 
 <span class="k">class</span> <span class="nc">Text</span><span class="p">(</span><span class="n">Widget</span><span class="p">,</span> <span class="n">XView</span><span class="p">,</span> <span class="n">YView</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;Text widget which can display text in various forms.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a text widget with the parent MASTER.</span>
 
 <span class="sd">        STANDARD OPTIONS</span>
@@ -3102,24 +3254,35 @@
 
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">bbox</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
+    <span class="k">def</span> <span class="nf">bbox</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return a tuple of (x,y,width,height) which gives the bounding</span>
-<span class="sd">        box of the visible part of the character at the index in ARGS.&quot;&quot;&quot;</span>
+<span class="sd">        box of the visible part of the character at the given index.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getints</span><span class="p">(</span>
-            <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;bbox&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">args</span><span class="p">))</span> <span class="ow">or</span> <span class="kc">None</span>
-    <span class="k">def</span> <span class="nf">tk_textSelectTo</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textSelectTo&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_textBackspace</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textBackspace&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_textIndexCloser</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textIndexCloser&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">tk_textResetAnchor</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;tk_textResetAnchor&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
+                <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;bbox&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">))</span> <span class="ow">or</span> <span class="kc">None</span>
     <span class="k">def</span> <span class="nf">compare</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">op</span><span class="p">,</span> <span class="n">index2</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return whether between index INDEX1 and index INDEX2 the</span>
 <span class="sd">        relation OP is satisfied. OP is one of &lt;, &lt;=, ==, &gt;=, &gt;, or !=.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getboolean</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;compare&#39;</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">op</span><span class="p">,</span> <span class="n">index2</span><span class="p">))</span>
+    <span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Counts the number of relevant things between the two indices.</span>
+<span class="sd">        If index1 is after index2, the result will be a negative number</span>
+<span class="sd">        (and this holds for each of the possible options).</span>
+
+<span class="sd">        The actual items which are counted depends on the options given by</span>
+<span class="sd">        args. The result is a list of integers, one for the result of each</span>
+<span class="sd">        counting option given. Valid counting options are &quot;chars&quot;,</span>
+<span class="sd">        &quot;displaychars&quot;, &quot;displayindices&quot;, &quot;displaylines&quot;, &quot;indices&quot;,</span>
+<span class="sd">        &quot;lines&quot;, &quot;xpixels&quot; and &quot;ypixels&quot;. There is an additional possible</span>
+<span class="sd">        option &quot;update&quot;, which if given then all subsequent options ensure</span>
+<span class="sd">        that any possible out of date information is recalculated.&quot;&quot;&quot;</span>
+        <span class="n">args</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;-</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">arg</span> <span class="k">for</span> <span class="n">arg</span> <span class="ow">in</span> <span class="n">args</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">arg</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">)]</span>
+        <span class="n">args</span> <span class="o">+=</span> <span class="p">[</span><span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">]</span>
+        <span class="n">res</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span> <span class="ow">or</span> <span class="kc">None</span>
+        <span class="k">if</span> <span class="n">res</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="p">:</span>
+            <span class="k">return</span> <span class="p">(</span><span class="n">res</span><span class="p">,</span> <span class="p">)</span>
+        <span class="k">else</span><span class="p">:</span>
+            <span class="k">return</span> <span class="n">res</span>
     <span class="k">def</span> <span class="nf">debug</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">boolean</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Turn on the internal consistency checks of the B-Tree inside the text</span>
 <span class="sd">        widget according to BOOLEAN.&quot;&quot;&quot;</span>
@@ -3283,6 +3446,24 @@
     <span class="k">def</span> <span class="nf">mark_previous</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the name of the previous mark before INDEX.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;mark&#39;</span><span class="p">,</span> <span class="s1">&#39;previous&#39;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span> <span class="ow">or</span> <span class="kc">None</span>
+    <span class="k">def</span> <span class="nf">peer_create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">newPathName</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Creates a peer text widget with the given newPathName, and any</span>
+<span class="sd">        optional standard configuration options. By default the peer will</span>
+<span class="sd">        have the same start and end line as the parent widget, but</span>
+<span class="sd">        these can be overridden with the standard configuration options.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;peer&#39;</span><span class="p">,</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">newPathName</span><span class="p">,</span>
+            <span class="o">*</span><span class="bp">self</span><span class="o">.</span><span class="n">_options</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">))</span>
+    <span class="k">def</span> <span class="nf">peer_names</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Returns a list of peers of this widget (this does not include</span>
+<span class="sd">        the widget itself).&quot;&quot;&quot;</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;peer&#39;</span><span class="p">,</span> <span class="s1">&#39;names&#39;</span><span class="p">))</span>
+    <span class="k">def</span> <span class="nf">replace</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="n">chars</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span> <span class="c1"># new in Tk 8.5</span>
+        <span class="sd">&quot;&quot;&quot;Replaces the range of characters between index1 and index2 with</span>
+<span class="sd">        the given characters and tags specified by args.</span>
+
+<span class="sd">        See the method insert for some more information about args, and the</span>
+<span class="sd">        method delete for information about the indices.&quot;&quot;&quot;</span>
+        <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;replace&#39;</span><span class="p">,</span> <span class="n">index1</span><span class="p">,</span> <span class="n">index2</span><span class="p">,</span> <span class="n">chars</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">scan_mark</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Remember the current X, Y coordinates.&quot;&quot;&quot;</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;scan&#39;</span><span class="p">,</span> <span class="s1">&#39;mark&#39;</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
@@ -3406,18 +3587,18 @@
 
 <span class="k">class</span> <span class="nc">_setit</span><span class="p">:</span>
     <span class="sd">&quot;&quot;&quot;Internal class. It wraps the command in the widget OptionMenu.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">var</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">callback</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">var</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">callback</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">__value</span> <span class="o">=</span> <span class="n">value</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">__var</span> <span class="o">=</span> <span class="n">var</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">__callback</span> <span class="o">=</span> <span class="n">callback</span>
-    <span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">__var</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__value</span><span class="p">)</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">__callback</span><span class="p">:</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">__callback</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__value</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
 
 <span class="k">class</span> <span class="nc">OptionMenu</span><span class="p">(</span><span class="n">Menubutton</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;OptionMenu which allows the user to select a value from a menu.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">variable</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="o">*</span><span class="n">values</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="n">variable</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="o">*</span><span class="n">values</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct an optionmenu widget with the parent MASTER, with</span>
 <span class="sd">        the resource textvariable set to VARIABLE, the initially selected</span>
 <span class="sd">        value VALUE, the other menu values VALUES and an additional</span>
@@ -3434,7 +3615,7 @@
         <span class="k">if</span> <span class="s1">&#39;command&#39;</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
             <span class="k">del</span> <span class="n">kwargs</span><span class="p">[</span><span class="s1">&#39;command&#39;</span><span class="p">]</span>
         <span class="k">if</span> <span class="n">kwargs</span><span class="p">:</span>
-            <span class="k">raise</span> <span class="n">TclError</span><span class="p">,</span> <span class="s1">&#39;unknown option -&#39;</span><span class="o">+</span><span class="n">kwargs</span><span class="o">.</span><span class="n">keys</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
+            <span class="k">raise</span> <span class="n">TclError</span><span class="p">(</span><span class="s1">&#39;unknown option -&#39;</span><span class="o">+</span><span class="n">kwargs</span><span class="o">.</span><span class="n">keys</span><span class="p">()[</span><span class="mi">0</span><span class="p">])</span>
         <span class="n">menu</span><span class="o">.</span><span class="n">add_command</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="n">value</span><span class="p">,</span>
                  <span class="n">command</span><span class="o">=</span><span class="n">_setit</span><span class="p">(</span><span class="n">variable</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">callback</span><span class="p">))</span>
         <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">values</span><span class="p">:</span>
@@ -3442,7 +3623,7 @@
                      <span class="n">command</span><span class="o">=</span><span class="n">_setit</span><span class="p">(</span><span class="n">variable</span><span class="p">,</span> <span class="n">v</span><span class="p">,</span> <span class="n">callback</span><span class="p">))</span>
         <span class="bp">self</span><span class="p">[</span><span class="s2">&quot;menu&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">menu</span>
 
-    <span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
         <span class="k">if</span> <span class="n">name</span> <span class="o">==</span> <span class="s1">&#39;menu&#39;</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__menu</span>
         <span class="k">return</span> <span class="n">Widget</span><span class="o">.</span><span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
@@ -3455,41 +3636,36 @@
 <span class="k">class</span> <span class="nc">Image</span><span class="p">:</span>
     <span class="sd">&quot;&quot;&quot;Base class for images.&quot;&quot;&quot;</span>
     <span class="n">_last_id</span> <span class="o">=</span> <span class="mi">0</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">imgtype</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">imgtype</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="kc">None</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">master</span><span class="p">:</span>
             <span class="n">master</span> <span class="o">=</span> <span class="n">_default_root</span>
             <span class="k">if</span> <span class="ow">not</span> <span class="n">master</span><span class="p">:</span>
-                <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> <span class="s1">&#39;Too early to create image&#39;</span>
+                <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s1">&#39;Too early to create image&#39;</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">master</span><span class="p">,</span> <span class="s1">&#39;tk&#39;</span><span class="p">,</span> <span class="n">master</span><span class="p">)</span>
         <span class="k">if</span> <span class="ow">not</span> <span class="n">name</span><span class="p">:</span>
             <span class="n">Image</span><span class="o">.</span><span class="n">_last_id</span> <span class="o">+=</span> <span class="mi">1</span>
             <span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;pyimage</span><span class="si">%r</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">Image</span><span class="o">.</span><span class="n">_last_id</span><span class="p">,)</span> <span class="c1"># tk itself would use image&lt;x&gt;</span>
-            <span class="c1"># The following is needed for systems where id(x)</span>
-            <span class="c1"># can return a negative number, such as Linux/m68k:</span>
-            <span class="k">if</span> <span class="n">name</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;-&#39;</span><span class="p">:</span> <span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;_&#39;</span> <span class="o">+</span> <span class="n">name</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
         <span class="k">if</span> <span class="n">kw</span> <span class="ow">and</span> <span class="n">cnf</span><span class="p">:</span> <span class="n">cnf</span> <span class="o">=</span> <span class="n">_cnfmerge</span><span class="p">((</span><span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">))</span>
         <span class="k">elif</span> <span class="n">kw</span><span class="p">:</span> <span class="n">cnf</span> <span class="o">=</span> <span class="n">kw</span>
         <span class="n">options</span> <span class="o">=</span> <span class="p">()</span>
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">cnf</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
-            <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+            <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">v</span><span class="p">):</span>
                 <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
-            <span class="k">elif</span> <span class="n">k</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;maskdata&#39;</span><span class="p">):</span>
-                <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">_createbytearray</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
             <span class="n">options</span> <span class="o">=</span> <span class="n">options</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="n">imgtype</span><span class="p">,</span> <span class="n">name</span><span class="p">,)</span> <span class="o">+</span> <span class="n">options</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
-    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span>
-    <span class="k">def</span> <span class="nf">__del__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span>
+    <span class="k">def</span> <span class="fm">__del__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">:</span>
             <span class="k">try</span><span class="p">:</span>
                 <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;delete&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
             <span class="k">except</span> <span class="n">TclError</span><span class="p">:</span>
                 <span class="c1"># May happen if the root was destroyed</span>
                 <span class="k">pass</span>
-    <span class="k">def</span> <span class="nf">__setitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__setitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">&#39;configure&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
-    <span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">&#39;configure&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">key</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">configure</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Configure the image.&quot;&quot;&quot;</span>
@@ -3497,28 +3673,26 @@
         <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">_cnfmerge</span><span class="p">(</span><span class="n">kw</span><span class="p">)</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
             <span class="k">if</span> <span class="n">v</span> <span class="ow">is</span> <span class="ow">not</span> <span class="kc">None</span><span class="p">:</span>
                 <span class="k">if</span> <span class="n">k</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;_&#39;</span><span class="p">:</span> <span class="n">k</span> <span class="o">=</span> <span class="n">k</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
-                <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="s1">&#39;__call__&#39;</span><span class="p">):</span>
+                <span class="k">if</span> <span class="n">callable</span><span class="p">(</span><span class="n">v</span><span class="p">):</span>
                     <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_register</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
-                <span class="k">elif</span> <span class="n">k</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;maskdata&#39;</span><span class="p">):</span>
-                    <span class="n">v</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">_createbytearray</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
                 <span class="n">res</span> <span class="o">=</span> <span class="n">res</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">&#39;config&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">res</span><span class="p">)</span>
     <span class="n">config</span> <span class="o">=</span> <span class="n">configure</span>
     <span class="k">def</span> <span class="nf">height</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the height of the image.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;height&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">))</span>
     <span class="k">def</span> <span class="nf">type</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the type of the image, e.g. &quot;photo&quot; or &quot;bitmap&quot;.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
     <span class="k">def</span> <span class="nf">width</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Return the width of the image.&quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="n">getint</span><span class="p">(</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">getint</span><span class="p">(</span>
             <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;width&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">))</span>
 
 <span class="k">class</span> <span class="nc">PhotoImage</span><span class="p">(</span><span class="n">Image</span><span class="p">):</span>
-    <span class="sd">&quot;&quot;&quot;Widget which can display colored images in GIF, PPM/PGM format.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="sd">&quot;&quot;&quot;Widget which can display images in PGM, PPM, GIF, PNG format.&quot;&quot;&quot;</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Create an image with NAME.</span>
 
 <span class="sd">        Valid resource names: data, format, file, gamma, height, palette,</span>
@@ -3531,7 +3705,7 @@
         <span class="sd">&quot;&quot;&quot;Return the value of OPTION.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">&#39;cget&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="n">option</span><span class="p">)</span>
     <span class="c1"># XXX config</span>
-    <span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="s1">&#39;cget&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="n">key</span><span class="p">)</span>
     <span class="c1"># XXX copy -from, -to, ...?</span>
     <span class="k">def</span> <span class="nf">copy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
@@ -3581,8 +3755,8 @@
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
 
 <span class="k">class</span> <span class="nc">BitmapImage</span><span class="p">(</span><span class="n">Image</span><span class="p">):</span>
-    <span class="sd">&quot;&quot;&quot;Widget which can display a bitmap.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="sd">&quot;&quot;&quot;Widget which can display images in XBM format.&quot;&quot;&quot;</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Create a bitmap with NAME.</span>
 
 <span class="sd">        Valid resource names: background, data, file, foreground, maskdata, maskfile.&quot;&quot;&quot;</span>
@@ -3597,7 +3771,7 @@
 
 <span class="k">class</span> <span class="nc">Spinbox</span><span class="p">(</span><span class="n">Widget</span><span class="p">,</span> <span class="n">XView</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;spinbox widget.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a spinbox widget with the parent MASTER.</span>
 
 <span class="sd">        STANDARD OPTIONS</span>
@@ -3731,7 +3905,7 @@
 <span class="sd">        select to commands. If the selection isn&#39;t currently in</span>
 <span class="sd">        the spinbox, then a new selection is created to include</span>
 <span class="sd">        the characters between index and the most recent selection</span>
-<span class="sd">        anchor point, inclusive. Returns an empty string.</span>
+<span class="sd">        anchor point, inclusive.</span>
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">selection</span><span class="p">(</span><span class="s2">&quot;adjust&quot;</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
 
@@ -3739,7 +3913,7 @@
         <span class="sd">&quot;&quot;&quot;Clear the selection</span>
 
 <span class="sd">        If the selection isn&#39;t in this widget then the</span>
-<span class="sd">        command has no effect. Returns an empty string.</span>
+<span class="sd">        command has no effect.</span>
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">selection</span><span class="p">(</span><span class="s2">&quot;clear&quot;</span><span class="p">)</span>
 
@@ -3747,15 +3921,15 @@
         <span class="sd">&quot;&quot;&quot;Sets or gets the currently selected element.</span>
 
 <span class="sd">        If a spinbutton element is specified, it will be</span>
-<span class="sd">        displayed depressed</span>
+<span class="sd">        displayed depressed.</span>
 <span class="sd">        &quot;&quot;&quot;</span>
-        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">selection</span><span class="p">(</span><span class="s2">&quot;element&quot;</span><span class="p">,</span> <span class="n">element</span><span class="p">)</span>
+        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;selection&#39;</span><span class="p">,</span> <span class="s1">&#39;element&#39;</span><span class="p">,</span> <span class="n">element</span><span class="p">)</span>
 
 <span class="c1">###########################################################################</span>
 
 <span class="k">class</span> <span class="nc">LabelFrame</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;labelframe widget.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a labelframe widget with the parent MASTER.</span>
 
 <span class="sd">        STANDARD OPTIONS</span>
@@ -3777,7 +3951,7 @@
 
 <span class="k">class</span> <span class="nc">PanedWindow</span><span class="p">(</span><span class="n">Widget</span><span class="p">):</span>
     <span class="sd">&quot;&quot;&quot;panedwindow widget.&quot;&quot;&quot;</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
+    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
         <span class="sd">&quot;&quot;&quot;Construct a panedwindow widget with the parent MASTER.</span>
 
 <span class="sd">        STANDARD OPTIONS</span>
@@ -3952,7 +4126,7 @@
 <span class="sd">        &quot;&quot;&quot;</span>
         <span class="k">if</span> <span class="n">cnf</span> <span class="ow">is</span> <span class="kc">None</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;paneconfigure&#39;</span><span class="p">,</span> <span class="n">tagOrId</span><span class="p">)</span>
-        <span class="k">if</span> <span class="nb">type</span><span class="p">(</span><span class="n">cnf</span><span class="p">)</span> <span class="o">==</span> <span class="n">StringType</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
+        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">cnf</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">kw</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_getconfigure1</span><span class="p">(</span>
                 <span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;paneconfigure&#39;</span><span class="p">,</span> <span class="n">tagOrId</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="o">+</span><span class="n">cnf</span><span class="p">)</span>
         <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">((</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;paneconfigure&#39;</span><span class="p">,</span> <span class="n">tagOrId</span><span class="p">)</span> <span class="o">+</span>
@@ -3963,39 +4137,12 @@
         <span class="sd">&quot;&quot;&quot;Returns an ordered list of the child panes.&quot;&quot;&quot;</span>
         <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">splitlist</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tk</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_w</span><span class="p">,</span> <span class="s1">&#39;panes&#39;</span><span class="p">))</span>
 
-<span class="c1">######################################################################</span>
-<span class="c1"># Extensions:</span>
-
-<span class="k">class</span> <span class="nc">Studbutton</span><span class="p">(</span><span class="n">Button</span><span class="p">):</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
-        <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;studbutton&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Enter&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonEnter</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Leave&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonLeave</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;1&gt;&#39;</span><span class="p">,</span>               <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonDown</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;ButtonRelease-1&gt;&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonUp</span><span class="p">)</span>
-
-<span class="k">class</span> <span class="nc">Tributton</span><span class="p">(</span><span class="n">Button</span><span class="p">):</span>
-    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">cnf</span><span class="o">=</span><span class="p">{},</span> <span class="o">**</span><span class="n">kw</span><span class="p">):</span>
-        <span class="n">Widget</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">master</span><span class="p">,</span> <span class="s1">&#39;tributton&#39;</span><span class="p">,</span> <span class="n">cnf</span><span class="p">,</span> <span class="n">kw</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Enter&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonEnter</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;Any-Leave&gt;&#39;</span><span class="p">,</span>       <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonLeave</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;1&gt;&#39;</span><span class="p">,</span>               <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonDown</span><span class="p">)</span>
-        <span class="bp">self</span><span class="o">.</span><span class="n">bind</span><span class="p">(</span><span class="s1">&#39;&lt;ButtonRelease-1&gt;&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">tkButtonUp</span><span class="p">)</span>
-        <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;fg&#39;</span><span class="p">]</span>               <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;bg&#39;</span><span class="p">]</span>
-        <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;activebackground&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;bg&#39;</span><span class="p">]</span>
-
-<span class="c1">######################################################################</span>
 <span class="c1"># Test:</span>
 
 <span class="k">def</span> <span class="nf">_test</span><span class="p">():</span>
     <span class="n">root</span> <span class="o">=</span> <span class="n">Tk</span><span class="p">()</span>
     <span class="n">text</span> <span class="o">=</span> <span class="s2">&quot;This is Tcl/Tk version </span><span class="si">%s</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">TclVersion</span>
-    <span class="k">if</span> <span class="n">TclVersion</span> <span class="o">&gt;=</span> <span class="mf">8.1</span><span class="p">:</span>
-        <span class="k">try</span><span class="p">:</span>
-            <span class="n">text</span> <span class="o">=</span> <span class="n">text</span> <span class="o">+</span> <span class="n">unicode</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">This should be a cedilla: </span><span class="se">\347</span><span class="s2">&quot;</span><span class="p">,</span>
-                                  <span class="s2">&quot;iso-8859-1&quot;</span><span class="p">)</span>
-        <span class="k">except</span> <span class="ne">NameError</span><span class="p">:</span>
-            <span class="k">pass</span> <span class="c1"># no unicode support</span>
+    <span class="n">text</span> <span class="o">+=</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">This should be a cedilla: </span><span class="se">\xe7</span><span class="s2">&quot;</span>
     <span class="n">label</span> <span class="o">=</span> <span class="n">Label</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">)</span>
     <span class="n">label</span><span class="o">.</span><span class="n">pack</span><span class="p">()</span>
     <span class="n">test</span> <span class="o">=</span> <span class="n">Button</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s2">&quot;Click me!&quot;</span><span class="p">,</span>
